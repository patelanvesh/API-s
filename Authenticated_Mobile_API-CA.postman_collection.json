{
	"info": {
		"_postman_id": "6302558f-7d95-478b-b9ab-efc66f9be981",
		"name": "Authenticated_Mobile_API-CA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AuthConfigDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonResponse = JSON.parse(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.environment.set(\"client_id\", data.environmentDetails.salesforce.clientID);\r",
							"pm.environment.set(\"mobile_search_url\", data.environmentDetails.mobileSearch.baseURL);\r",
							"pm.environment.set(\"mobile_search_api_key\", data.environmentDetails.mobileSearch.apiKey);\r",
							"\r",
							"pm.environment.set(\"environment_api_key\", data.environmentDetails.tcast.apiKey);\r",
							"\r",
							"pm.environment.set(\"callbackURI\", data.environmentDetails.salesforce.callbackURI);\r",
							"\r",
							"pm.environment.set(\"identifier\", data.environmentDetails.identifier);\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var chars = 'abcdefghijklmnopqrstuvwxyz1234567890';\r",
							"var string = '';\r",
							"var firstName = '';\r",
							"var lastName = '';\r",
							"\r",
							"//genernate random email\r",
							"for(var ii=0; ii<5; ii++){\r",
							"    string += chars[Math.floor(Math.random() * chars.length)];\r",
							"}\r",
							"\r",
							"//Last Name: QA+Test + Testers Initials + NN (Sequential number)\r",
							"var sequenceNumber = Number(pm.environment.get('LastNameCounter'));\r",
							"\r",
							"var randmonEmail = 'QATEST' + string + sequenceNumber +  '@Automation.com';\r",
							"pm.environment.set('email',randmonEmail);\r",
							"pm.environment.set('locale_us', 'en_US');\r",
							"pm.environment.set('locale_ca', 'en_CA');\r",
							"pm.environment.set('CountryInitials', 'US');\r",
							"pm.environment.set('CACountryInitials', 'CA');\r",
							"\r",
							"\r",
							"console.log(encodeURIComponent(randmonEmail));\r",
							"pm.environment.set('encode_email',encodeURIComponent(randmonEmail));\r",
							"\r",
							"//password\r",
							"pm.environment.set('encode_password', encodeURIComponent('Tester1!@#$%^&*()'));\r",
							"\r",
							"//First Name:QA + [2 letter country ISO  abbreviation]        \r",
							"//create first name\r",
							"pm.environment.set('firstName','QA' + pm.environment.get('CACountryInitials'));\r",
							"\r",
							"var lastName = 'QATEST' + pm.environment.get('TesterInitials') + sequenceNumber;\r",
							"pm.environment.set('lastName',lastName);  \r",
							"pm.environment.set('LastNameCounter',sequenceNumber + 1);  \r",
							"\r",
							"//random phone number....find a good phone number\r",
							"do {\r",
							"\tphoneNumber = Math.floor(Math.pow(10, 9) + Math.random() * 9 * Math.pow(10,9));\r",
							"\tvar phoneRegex = /^\\(?([2-9]{3})\\)?[-. ]?([2-9]{3})[-. ]?([0-9]{4})$/;\r",
							"\tconsole.log(phoneRegex.test(phoneNumber));\r",
							"  \t// console.log(phoneNumber);\r",
							"}while (!phoneRegex.test(phoneNumber));\r",
							"\r",
							"//format phone to desired \r",
							"phoneNumber = formatPhoneNumber(phoneNumber);\r",
							"console.log(phoneNumber);\r",
							"pm.environment.set('phone',phoneNumber);\r",
							"\r",
							"//set source\r",
							"pm.environment.set('sourceId','RH App');\r",
							"\r",
							"//now generate verification code\r",
							"var rString = generateVerificationCode();\r",
							"// console.log(rString);\r",
							"//set source\r",
							"pm.environment.set('randomVerificationCode',rString);\r",
							"\r",
							"pm.environment.set('todayDate',generateDate());\r",
							"pm.environment.set('futureExpiryDate',generateDate(15));\r",
							"\r",
							"//format phone number\r",
							"function formatPhoneNumber(phoneNumberString) {\r",
							"  var cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\r",
							"  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r",
							"  if (match) {\r",
							"    return '(' + match[1] + ') ' + match[2] + '-' + match[3]\r",
							"  }\r",
							"  return null\r",
							"}\r",
							"\r",
							"//generate verification code\r",
							"function generateVerificationCode() {\r",
							"    var length = 40;\r",
							"    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\r",
							"    var result = '';\r",
							"    for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\r",
							"    return result;\r",
							"}\r",
							"\r",
							"//Generate date\r",
							"function generateDate(strDays){\r",
							"    const dtDate = new Date();\r",
							"    if (strDays != undefined){\r",
							"        dtDate.addDays(strDays);\r",
							"    }\r",
							"    return dtDate.toISOString();\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/authconfig?getdetails=true",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"authconfig"
					],
					"query": [
						{
							"key": "getdetails",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SOAP Login - Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var result = xml2Json(pm.response.text())[\"soapenv:Envelope\"][\"soapenv:Body\"].loginResponse.result;",
							"var url = result.serverUrl.split(\"/\");",
							"pm.environment.set(\"admin_accessToken\", result.sessionId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "SOAPAction",
						"value": "login",
						"type": "text"
					},
					{
						"key": "charset",
						"value": "UTF-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<env:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <env:Body>\n    <n1:login xmlns:n1=\"urn:partner.soap.sforce.com\">\n      <n1:username>{{admin_username}}</n1:username>\n      <n1:password>{{admin_password}}{{admin_securityToken}}</n1:password>\n    </n1:login>\n  </env:Body>\n</env:Envelope>"
				},
				"url": {
					"raw": "{{_endpoint}}/services/Soap/u/v48.0",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"services",
						"Soap",
						"u",
						"v48.0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Master data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var sequenceNumber = Number(pm.environment.get('companyNameCounter'));\r",
							"if (sequenceNumber == undefined){\r",
							"    sequenceNumber = 0;\r",
							"}\r",
							"\r",
							"//Account name \r",
							"//QA + [2 letter country ISO abbreviation] + TEST + Testers Initials + NN(sequential number)\r",
							"//QAUSTESTCOMPAUTOSP(random number )\r",
							"pm.environment.set('accountName','QA' + pm.environment.get('CountryInitials') \r",
							"                    + 'TESTCOMPAUTO' + pm.environment.get('TesterInitials') \r",
							"                    + sequenceNumber);\r",
							"\r",
							"pm.environment.set('companyNameCounter',sequenceNumber + 1);  \r",
							"\r",
							"//main address\r",
							"pm.environment.set('mainCity', pm.variables.replaceIn(\"{{$randomCity}}\"));\r",
							"pm.environment.set('mainStreetName',pm.variables.replaceIn(\"{{$randomStreetName}}\"));\r",
							"pm.environment.set('mainStreetAddress',pm.variables.replaceIn(\"{{$randomStreetAddress}}\"));\r",
							"pm.environment.set('companyPhone',pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));\r",
							"\r",
							"\r",
							"//Billing address\r",
							"pm.environment.set('billingCity', pm.variables.replaceIn(\"{{$randomCity}}\"));\r",
							"pm.environment.set('billingStreetName',pm.variables.replaceIn(\"{{$randomStreetName}}\"));\r",
							"pm.environment.set('billingStreetAddress',pm.variables.replaceIn(\"{{$randomStreetAddress}}\"));\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());\r",
							"const obj = JSON.parse(jsonData);\r",
							"\r",
							"\r",
							" for(var i=0; i<obj.compositeResponse.length; i++){\r",
							"    if(obj.compositeResponse[i].referenceId == 'branchName'){\r",
							"        pm.environment.set('branchId', obj.compositeResponse[i].body.records[0].Id);\r",
							"    }\r",
							"    if(obj.compositeResponse[i].referenceId == 'countryName'){\r",
							"        pm.environment.set('US_Country_of_Record__c', obj.compositeResponse[i].body.records[0].Id);\r",
							"    }\r",
							"    if(obj.compositeResponse[i].referenceId == 'stateName'){\r",
							"        pm.environment.set('US_State__c', obj.compositeResponse[i].body.records[0].Id);\r",
							"    }\r",
							"    if(obj.compositeResponse[i].referenceId == 'jobfunction'){\r",
							"        pm.environment.set('jobfunctionId', obj.compositeResponse[i].body.records[0].Id);\r",
							"    }\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{admin_accessToken}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"allOrNone\" : true,\n    \"compositeRequest\" : [{\n        \"url\": \"/services/data/v44.0/query?q=select+Id+from+Branch__c+where+Branch_Name__c=%27Lexington - North%27\",\n        \"method\": \"GET\",\n            \"referenceId\": \"branchName\"\n    },{\n        \"url\": \"/services/data/v44.0/query?q=select+Id+from+job_function__c+where+Name=%27Sr. Finance Accountant%27\",\n        \"method\": \"GET\",\n            \"referenceId\": \"jobfunction\"\n    },{\n        \"url\": \"/services/data/v44.0/query?q=select+Id+from+country__c+where+Name=%27{{CAcountry}}%27\",\n        \"method\": \"GET\",\n            \"referenceId\": \"countryName\"\n    },{\n        \"url\": \"/services/data/v44.0/query?q=select+Id+from+state__c+where+Name=%27{{CAstate}}%27\",\n        \"method\": \"GET\",\n            \"referenceId\": \"stateName\"\n    }]\n}"
				},
				"url": {
					"raw": "{{_endpoint}}/services/data/v{{version}}/composite",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"services",
						"data",
						"v{{version}}",
						"composite"
					]
				},
				"description": "Executes actions on multiple records in one request. Use SObject Collections to reduce the number of round-trips between the client and server. This resource is available in API version 42.0 and later.\n\nhttps://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_composite_sobjects_collections.htm"
			},
			"response": []
		},
		{
			"name": "CheckEmailCall  -- Generate User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"pm.test(\"response must be valid and have a body\", function(){\r",
							"     pm.response.to.be.ok; \r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json; \r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Email in Response \", function(){\r",
							"    var emailInreq = pm.environment.get('email'); \r",
							"    pm.expect(data.candidateEmail).to.equal(emailInreq);\r",
							"});\r",
							"pm.test(\"Account Status \", function(){\r",
							"pm.environment.set(\"accountStatus\", \"noSFAccount\");\r",
							"var accountStatus =pm.environment.get('accountStatus');  \r",
							"    pm.expect(data.accountCheck).to.equal(accountStatus);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/EmailCheck?candidateEmail={{email}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"EmailCheck"
					],
					"query": [
						{
							"key": "candidateEmail",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Verification Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"pm.test(\"Verification code generated successfully \", function(){\r",
							"    pm.expect(data.message).to.equal('Verification code generated successfully');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"sourceId\": \"{{sourceId}}\",\n    \"phone\": \"{{phone}}\",\n    \"ageVerification\": \"true\",\n    \"authorizedToWorkUS\": \"false\",\n    \"locale\": \"{{locale_ca}}\",\n    \"ccode\": \"{{CACountryInitials}}\",\n    \"journey\": \"{{journey}}\",\n    \"password\": \"{{password}}\",\n    \"postalCode\": \"{{CAPostalCode}}\",\n    \"authorizedToWorkCA\": \"true\",\n    \"lobCode\": \"{{lobCode}}\",\n    \"fileName\": \"{{firstName}}_{{lastName}}_Resume.txt\",\n    \"contentType\": \"text/plain\",\n    \"resume\": \"0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7%2FCQAGAAAAAAAAAAAAAAABAAAAMwAAAAAAAAAAEAAANQAAAAEAAAD%2B%2F%2F%2F%2FAAAAADIAAAD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FspcEABQAJBAAA8BK%2FAAAAAAAAEAAAAAAACAAAGhAAAA4AYmpiaqAaoBoAAAAAAAAAAAAAAAAAAAAAAAAJBBYALhYAAMJwImfCcCJnGggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%2F%2Fw8AAAAAAAAAAAD%2F%2Fw8AAAAAAAAAAAD%2F%2Fw8AAAAAAAAAAAAAAAAAAAAAALcAAAAAAEYHAAAAAAAARgcAANgUAAAAAAAA2BQAAAAAAADYFAAAAAAAANgUAAAAAAAA2BQAABQAAAAAAAAAAAAAAP%2F%2F%2F%2F8AAAAA7BQAAAAAAADsFAAAAAAAAOwUAAAAAAAA7BQAAAwAAAD4FAAADAAAAOwUAAAAAAAA0BYAAHQBAAAEFQAAAAAAAAQVAAAAAAAABBUAAAAAAAAEFQAAAAAAAAQVAAAAAAAA3xUAAAAAAADfFQAAAAAAAN8VAAAAAAAATxYAAAIAAABRFgAAAAAAAFEWAAAAAAAAURYAAAAAAABRFgAAAAAAAFEWAAAAAAAAURYAACQAAABEGAAAtgIAAPoaAABKAAAAdRYAABUAAAAAAAAAAAAAAAAAAAAAAAAA2BQAAAAAAADfFQAAAAAAAAAAAAAAAAAAAAAAAAAAAADfFQAAAAAAAN8VAAAAAAAA3xUAAAAAAADfFQAAAAAAAHUWAAAAAAAAAAAAAAAAAADYFAAAAAAAANgUAAAAAAAABBUAAAAAAAAAAAAAAAAAAAQVAADbAAAAihYAABYAAAAXFgAAAAAAABcWAAAAAAAAFxYAAAAAAADfFQAAFgAAANgUAAAAAAAABBUAAAAAAADYFAAAAAAAAAQVAAAAAAAATxYAAAAAAAAAAAAAAAAAABcWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3xUAAAAAAABPFgAAAAAAAAAAAAAAAAAAFxYAAAAAAAAAAAAAAAAAABcWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxYAAAAAAAAEFQAAAAAAAP%2F%2F%2F%2F8AAAAAgPqQ%2BrSK1gEAAAAAAAAAAP%2F%2F%2F%2F8AAAAA9RUAACIAAAAXFgAAAAAAAAAAAAAAAAAAOxYAABQAAACgFgAAMAAAANAWAAAAAAAAFxYAAAAAAABEGwAAAAAAABcWAAAAAAAARBsAAAAAAAAXFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQbAAAAAAAAAAAAAAAAAADYFAAAAAAAABcWAAAkAAAA3xUAAAAAAADfFQAAAAAAABcWAAAAAAAA3xUAAAAAAADfFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3xUAAAAAAADfFQAAAAAAAN8VAAAAAAAAdRYAAAAAAAB1FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8VAAAAAAAA3xUAAAAAAADfFQAAAAAAANAWAAAAAAAA3xUAAAAAAADfFQAAAAAAAN8VAAAAAAAA3xUAAAAAAAAAAAAAAAAAAP%2F%2F%2F%2F8AAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAAAAAAAAAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAP%2F%2F%2F%2F8AAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAP%2F%2F%2F%2F8AAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAP%2F%2F%2F%2F8AAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAP%2F%2F%2F%2F8AAAAA%2F%2F%2F%2F%2FwAAAAD%2F%2F%2F%2F%2FAAAAAEQbAAAAAAAA3xUAAAAAAADfFQAAAAAAAN8VAAAAAAAA3xUAAAAAAADfFQAAAAAAAN8VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfFQAAAAAAAN8VAAAAAAAA3xUAAAAAAABGBwAAWAwgUUFURVNUTQ0gMTI3IENodXJjaCBTdCwgVG9yb250bywgT04gTTVDIDJHNSwgQ2FuYWRhIHx8ICg0MTYpIDk5OS05OTk5IHx8IHFhY2FxYXRlc3RtMTAwMUBnbWFpbC5jb20gDVNPRlRXQVJFIFFVQUxJVFkgQVNTVVJBTkNFIEVOR0lORUVSDQ1TVU1NQVJZOiANIDIgKyB5ZWFycyBvZiBleHBlcmllbmNlIGluIFF1YWxpdHkgQXNzdXJhbmNlIG9mIHZhcmlvdXMgZmllbGRzIGluY2x1ZGluZyBXZWIgYW5kIE1vYmlsZSBzb2Z0d2FyZSCVIFByb2ZpY2llbnQgaW4gTWFudWFsIGFuZCBBdXRvbWF0ZWQgc29mdHdhcmUgdGVzdGluZyBpbiBKYXZhIHdpdGggU2VsZW5pdW0gV2ViRHJpdmVyLiCVIEV4cGVyaWVuY2VkIGluIFNjcnVtIEFnaWxlLCBhbmQgV2F0ZXJmYWxsIE1ldGhvZG9sb2dpZXMgd2l0aCBhIHNvbGlkIHVuZGVyc3RhbmRpbmcgYW5kIHByYWN0aWNhbCBleHBlcmllbmNlIG9mIHNvZnR3YXJlIGRldmVsb3BtZW50IGxpZmUgY3ljbGUgKFNETEMpLCB0ZXN0aW5nIG1ldGhvZG9sb2dpZXMuIJUgSGFuZHMtb24gZXhwZXJpZW5jZSBpbiB3cml0aW5nIHRlc3Qgc3VpdGVzIHRlc3QgcGxhbiBhbmQgdGVzdCBjYXNlcyBmb3IgbmV3IHByb2R1Y3QgZmVhdHVyZXMsIHJlcG9ydGluZyBhbmQgdmVyaWZ5aW5nIHNvZnR3YXJlIGRlZmVjdHMsIFFBIHRlcm1pbm9sb2d5IGFuZCBsb2NhbGl6YXRpb24gcHJvY2Vzc2VzLiCVIFdvcmsgZXhwZXJpZW5jZSB3aXRoIE15U1FMIGRhdGFiYXNlcy4glSBFeHBlcmllbmNlIHdpdGggZGlmZmVyZW50IHR5cGVzIG9mIHRlc3Rpbmcgc3VjaCBhcyBSZWdyZXNzaW9uLCBGdW5jdGlvbmFsLCBXaGl0ZS1ib3ggVGVzdGluZyBhbmQgQmxhY2tib3ggVGVzdGluZyCVIEFybWVkIHdpdGggc29saWQgY29tbXVuaWNhdGlvbiwgb3JnYW5pemF0aW9uYWwsIG11bHRpdGFza2luZywgYW5kIGludGVycGVyc29uYWwgc2tpbGxzLiAglSBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIHNvbWVvbmUgd2hvIGlzIFRlY2huaWNhbCBpbiBuYXR1cmUgYnV0IGZvY3VzZWQgb24gUXVhbGl0eSBpbiBtZW50YWxpdHkgYW5kIGFwcHJvYWNoLCBJIG1heSBiZSBvZiB2YWx1ZSBhbmQgZ29vZCBhZGRpdGlvbiB0byB5b3VyIHRlYW0uIA0gDVRFQ0hOSUNBTCBTS0lMTFM6IJUgTGFuZ3VhZ2VzOiAgICAgICAgIEphdmEsIEhUTUwsIFhNTCwgU1FMIJUgVGVzdCBBdXRvbWF0aW9uOiAgICBTZWxlbml1bSwgVGVzdE5HLCBYQ29kZSwgICAgQW5kcm9pZCwgU3R1ZGlvLCBKZW5raW5zLCBBbGx1cmUglSBDSSBhbmQgQnVpbGQgVG9vbHM6IEplbmtpbnMsIE1hdmVuIJUgRGF0YWJhc2U6ICAgICAgICAgTXlTUUwgDZUgVmVyc2lvbiBDb250cm9sOiAgICBHaXQsIEdpdEh1YiCVIFZpcnR1YWxpemF0aW9uOiAgICAgICBWaXJ0dWFsIEJveCCVIFFBIFRyYWNraW5nOiAgICAgICAgSklSQSwgQnVnemlsbGEsIFRlc3RSYWlsIJUgTW9iaWxlIFBsYXRmb3JtczogIGlPUywgQW5kcm9pZCBPUyCVIFBsYXRmb3JtczogICAgICAgICAgICAgIFdpbmRvd3MsIExpbnV4LCBNQUMgT1MgWA0gDVBST0ZFU1NJT05BTCBFWFBFUklFTkNFLiANDZUJQ29tcGFueSBOYW1lOiBSYWdpbmdXaXJlIERhdGEgQ2VudGVyIA2VCUxvY2F0aW9uOiBTYWNyYW1lbnRvLCBDQSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA2VCUR1cmF0aW9uOiAwMS8yMDE4IJYgUHJlc2VudCANlQlKb2IgVGl0bGU6IFNvZnR3YXJlIFFBIEVuZ2luZWVyIA0NDZUJRGVzY3JpcHRpb246IFdvcmtlZCBjbG9zZWx5IHdpdGggdGhlIHByb2plY3QgbWFuYWdlciBhbmQgdGhlIGRldmVsb3BtZW50IHRlYW0sIGNyZWF0ZWQgVGVzdCBwbGFucyBhbmQgVGVzdCBjYXNlcyBmb3IgbmV3IGZlYXR1cmVzIGFuZCBtYWtpbmcgc3VyZSB0aGF0IHRoZSByZXF1aXJlbWVudHMgYXJlIG1ldCBiZWZvcmUgYW5kIGFmdGVyIGltcGxlbWVudGF0aW9uIG9mIHRoZSBmZWF0dXJlcy4gDSANIA0gDUVEVUNBVElPTiANDURlZ3JlZTogTWFzdGVyJ3MNU2Nob29sIE5hbWU6ICBBQkMgdW5pdmVyc2l0eQ1HcmFkdWF0ZWQgaW4gMjAxOA1NYWpvcjogQ29tcHV0ZXIgU2NpZW5jgAAGkIAACNCAAAjggAAJgIAACYCQAAmAoAAJgLAABODAAAUAwAAJgMAAAfDQAAmA0AAOwNAADuDQAACA4AAAkOAAAxDgAAiA4AAJgOAACnDgAAyg4AAMsOAADMDgAAmA8AALAPAACyDwAAtA8AALYPAADBDwAAwg8AANMPAADwDwAAAhAAABkQAAAaEAAA%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz8%2FPz4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhZoEQQqAAAGFminVegAJAAIAAANCAAAaQgAAI0IAACOCAAAmAgAAE4MAABQDAAAHw0AAOwNAADuDQAACA4AAAkOAAAxDgAAiA4AAKcOAADKDgAAyw4AAMwOAACwDwAAsg8AALQPAAC2DwAAwQ8AAMIPAADTDwAA8A8AAAIQAAAaEAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAPoAAAAAAAAAAAAAAAD6AAAAAAAAAAAAAAAA%2BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAGdkp1XoAAAcLAAxkGgBH7DQLyCw4D0hsKAFIrCgBSOQoAUkkKAFJbAAABew0AIYsNACDJDQAggYPABIAAQB4AQ8ABwADAAMAAwAAAAQACAAAAJgAAACeAAAAngAAAJ4AAACeAAAAngAAAJ4AAACeAAAAngAAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAAHYCAAB2AgAAdgIAAHYCAAB2AgAAdgIAAHYCAAB2AgAAdgIAADYGAAA2BgAANgYAADYGAAA2BgAANgYAAD4CAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAACoAAAANgYAADYGAAAWAAAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAC4AAAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAAaAEAAEgBAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAADYGAAA2BgAANgYAAHACAAA2BgAAMgYAABgAAADGAwAA1gMAAOYDAAD2AwAABgQAABYEAAAmBAAANgQAAEYEAABWBAAAZgQAAHYEAACGBAAAlgQAAMYDAADWAwAA5gMAAPYDAAAGBAAAFgQAADIGAAAoAgAA2AEAAOgBAAAmBAAANgQAAEYEAABWBAAAZgQAAHYEAACGBAAAlgQAAMYDAADWAwAA5gMAAPYDAAAGBAAAFgQAACYEAAA2BAAARgQAAFYEAABmBAAAdgQAAIYEAACWBAAAxgMAANYDAADmAwAA9gMAAAYEAAAWBAAAJgQAADYEAABGBAAAVgQAAGYEAAB2BAAAhgQAAJYEAADGAwAA1gMAAOYDAAD2AwAABgQAABYEAAAmBAAANgQAAEYEAABWBAAAZgQAAHYEAACGBAAAlgQAAMYDAADWAwAA5gMAAPYDAAAGBAAAFgQAACYEAAA2BAAARgQAAFYEAABmBAAAdgQAAIYEAACWBAAAxgMAANYDAADmAwAA9gMAAAYEAAAWBAAAJgQAADYEAABGBAAAVgQAAGYEAAB2BAAAhgQAAJYEAAA4AQAAWAEAAPgBAAAIAgAAGAIAAFYCAAB%2BAgAAkAIAAKACAACwAgAAwAIAANACAACAAgAA4AIAAPACAAAAAwAAEAMAACADAAAwAwAAQAMAAOACAADwAgAAAAMAABADAAAgAwAAMAMAAEADAADgAgAA8AIAAAADAAAQAwAAIAMAADADAABAAwAA4AIAAPACAAAAAwAAEAMAACADAAAwAwAAQAMAAOACAADwAgAAAAMAABADAAAgAwAAMAMAAEADAADgAgAA8AIAAAADAAAQAwAAIAMAADADAABAAwAA4AIAAPACAAAAAwAAEAMAACADAAAwAwAAQAMAAOACAADwAgAAAAMAABADAAAgAwAAMAMAAEADAADgAgAA8AIAAAADAAAQAwAAIAMAADADAABAAwAA4AIAAPACAAAAAwAAEAMAACADAAAwAwAAQAMAAOACAADwAgAAAAMAABADAAAgAwAAMAMAAEADAADgAgAA8AIAAAADAAAQAwAAIAMAADADAABAAwAA4AIAAPACAAAAAwAAEAMAACADAAAwAwAAQAMAAOACAADwAgAAAAMAABADAAAgAwAAMAMAAEADAAA2BgAANgYAADYGAAA2BgAANgYAACAAAABPSgMAUEoDAFFKAwBfSAEEbUgJBG5ICQRzSAkEdEgJBAAAAABKAABg8f8CAEoADBAAAAAAAAAAAAYATgBvAHIAbQBhAGwAAAAMAAAAEmQDAQEAFKSgABgAQ0oWAF9IAQRhShYAbUgJBHNICQR0SAkEAAAAAAAAAAAAAAAAAAAAAAAARABBIPL%2FoQBEAAwNAAAAAAAAEAAWAEQAZQBmAGEAdQBsAHQAIABQAGEAcgBhAGcAcgBhAHAAaAAgAEYAbwBuAHQAAAAAAFIAaQDz%2F7MAUgAMDQAAAAAAADAGDABUAGEAYgBsAGUAIABOAG8AcgBtAGEAbAAAABwAF%2FYDAAA01gYAAQoDbAA01gYAAQUDAABh9gMAAAIACwAAACgAayD0%2F8EAKAAADQAAAAAAADAGBwBOAG8AIABMAGkAcwB0AAAAAgAMAAAAAABQSwMEFAAGAAgAAAAhAOneD7%2F%2FAAAAHAIAABMAAABbQ29udGVudF9UeXBlc10ueG1srJHLTsMwEEX3SPyD5S1KnLJACCXpgseOx6J8wMiZJBbJ2LKnVfv3TNJUQqggFmws2TP3njvjcr0fB7XDmJynSq%2FyQisk6xtHXaXfN0%2FZrVaJgRoYPGGlD5j0ur68KDeHgEmJmlKle%2BZwZ0yyPY6Qch%2BQpNL6OALLNXYmgP2ADs11UdwY64mROOPJQ9flA7awHVg97uX5mCTikLS6PzZOrEpDCIOzwJLU7Kj5RskWQi7KuSf1LqQriaHNWcJU%2BRmw6F5lNdE1qN4g8guMEsOwDIlfz2cgGS3mvzueiezb1llsvN2Oso58Nl7MTsH%2FFGD1P%2BgT08x%2FW38CAAD%2F%2FwMAUEsDBBQABgAIAAAAIQCl1qfnwAAAADYBAAALAAAAX3JlbHMvLnJlbHOEj89qwzAMh%2B%2BFvYPRfVHSwxgldi%2BlkEMvo30A4Sh%2FaCIb2xvr20%2FHBgq7CISk7%2FepPf6ui%2FnhlOcgFpqqBsPiQz%2FLaOF2Pb9%2FgsmFpKclCFt4cIaje9u1X7xQ0aM8zTEbpUi2MJUSD4jZT7xSrkJk0ckQ0kpF2zRiJH%2BnkXFf1x%2BYnhngNkzT9RZS1zdgro%2Boyf%2BzwzDMnk%2FBf68s5UUEbjeUTGnkYqGoL%2BNTvZCoZarUHtC1uPnW%2FQEAAP%2F%2FAwBQSwMEFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAB0aGVtZS90aGVtZS90aGVtZU1hbmFnZXIueG1sDMxNCsMgEEDhfaF3kNk3Y7soRWKyy6679gBDnBpBx6DSn9vX5eODN87fFNWbSw1ZLJwHDYplzS6It%2FB8LKcbqNpIHMUsbOHHFebpeBjJtI0T30nIc1F9I9WQha213SDWtSvVIe8s3V65JGo9i0dX6NP3KeJF6ysmCgI4%2FQEAAP%2F%2FAwBQSwMEFAAGAAgAAAAhAMI6jvXgBgAAsx8AABYAAAB0aGVtZS90aGVtZS90aGVtZTEueG1s7FlLbxs3EL4X6H9Y7L2xZOsRG5ED6xU38QuRkiJHSkvt0uIuFyRlR7ciOfVSoEBa9NAAvfVQFA3QAA166Y8x4KBNf0SHXGmXlKj4gRQICluAoaW%2BGX6cmZ2Znb1z92lMvRPMBWFJwy%2FfKvkeToYsIEnY8B%2F1u5%2Fd9j0hURIgyhLc8KdY%2BHe3P%2F3kDtqSEY6xB%2FKJ2EINP5Iy3VpbE0NYRuIWS3ECv40Yj5GESx6uBRydgt6Yrq2XSrW1GJHE9xIUg9rD0YgMsddXKv3tufIOhctECrUwpLynVGNLQmODcVkhxFS0KPdOEG34sE%2FATvv4qfQ9ioSEHxp%2BSf%2F5a9t31tDWTIjKFbKGXFf%2FzeRmAsF4Xe%2FJw0G%2BaaVSrdR2cv0aQOUyrlPv1Dq1XJ8GoOEQTppxsXXW11uVGdYAZV8dutv19kbZwhv6N5Y471TVx8JrUKa%2FsoTvdltgRQuvQRm%2BuoSvNjebbVu%2FBmX42hK%2BXtppV%2BqWfg2KKEnGS%2BhStbbRmp82h4wY3XXCN6uVbn19prxAQTTk0aW2GLFEroq1GB0z3gWAAlIkSeLJaYpHaAhR3EKUDDjx9kgYQeClKGEClkvrpW5pA%2F6rT0V%2F0x5FWxgZ0ooXMBFLS4qPJ4acpLLh3wetvgE5f%2FPm7Nnrs2e%2Fnz1%2Ffvbs19neWpUlt4uS0JR799M3%2F7z80vv7tx%2Ffvfg223oRL0z821%2B%2BevvHn%2B9TDycuTHH%2B3au3r1%2Bdf%2F%2F1Xz%2B%2FcGjf4WhgwvskxsI7wKfeQxbDAR388YBfTaIfIWJK7CShQAlSuzj0d2RkoQ%2BmiCIHroltOz7mkGpcwHuTY4twL%2BITSRwaH0SxBdxnjDYZd1rhgdrLMHN%2FkoTuzfnExD1E6MS1dwsllpc7kxRyLHGpbEXYonlEUSJRiBMsPfUbG2PsON0TQiy77pMhZ4KNpPeEeE1EnCbpk4EVTYXQLonBL1MXQfC3ZZv9x16TUdep2%2FjERsK9gaiDfB9Ty4z30ESi2KWyj2JqGnwPychFsjflQxPXERI8HWLKvE6AhXDJHHI4r%2BH0B5Bm3G7fp9PYRnJJxi6de4gxE9lm41aE4tSF7ZEkMrGfizGEKPKOmHTB95l9h6hr8ANKVrr7McGWuy%2FOBo8gw5qUigBRv0y4w5f3MLPitzelI4RdqWaHx1aK3eHEGR3NSWiF9h7GFJ2iAGPv0ecOBk2WWjYvSN%2BPIKvsYldg3Ud2rKrrBAvolVRzs5wn94iwQraHQ7aCz%2F50IfFMURIjvkrzAXjdtHkHSl3sCoBDOhybwAMCPSDEi9MohwJ0GMG9UutRhKwCpq6FO16n3PLfZe4xuC%2BPLRqXuC9BBl9ZBhK7KfNe2%2FQRtTYoAqaPoMtwpVsQsdxfiKjiqsUmTrmRfdMWboDuyGp6YpJc2AEt9D7V%2F673gQ7j%2FIeXjvvgw%2FQ7bsVWsrpip7Mqmewu9DercItdTYvxgHz8TU0bTZIjDHVkOWPd9DQ3PY3%2Fv%2B9pVt3PN53Mqn7jppPxocO46WRmw5UP08kUzQv0NWrgkQ169NgnXjn1GRFKe3JK8Z7Qgx8BzzNBFxaVnJ544nwKmEbwVZU52MDChRxpGY8z%2BQWRUS9CKUyHyr5SEoqZ6lB4KRMwNNLLTt0KTyfxPguyYWe5rAabWWUVSBbrpWq%2BDoMqmaFr9WKAl6vXbEM9aJ0TULJXIWFsZpPYcJCozxeVkfRYF4zmIKFP9kFYbDpY3Fbq565aYgHUcq%2FAA7cHj%2BkNv1oBERCCeRw054HyU%2BbquXe1Mz%2Bkp1cZ04oAaLDnEVB4elNxXXk8dbos1C7haYuEEW42CW0Z3eCJCB6DZ9GpVi9D46q%2B3ixcatFTptD7QWgVNOq338fiur4GucXcQBMzU9DEO234tY0qhMwQpQ1%2FBENj%2BBqnEDtCPXMhGsKbl6Hk2Q1%2FncySciHbSESZwXXSybJBTCTmHiVxw1fHz91AE51DNLfyOiSEj5bcJqSVj40cON12Mh6N8FCabjdWlKWzS8jwWa5w%2FqrFrw9WkmwC7u5Fwak3oBP%2BEEGIVetlZcCACHh3UM6sGRB4GZYnsiL%2BFgrTLO2ab6N0DGXriKYRmlUUM5lncJ3Kczr6KreBcTU7MxjUMMmsEA5CVWBNo1rVNK8aGYeVVfdiIWU5I2kWNdPKKqpqurOYtcO8DCzY8npF3mA1NzHkNLPCZ6l7MeVuznPdQp%2BQVwkweG4%2FR9W9REEwqBWbWdQU4%2BU0rHL2bNWuHfMDXkDtMkXCyPq1udoFu%2BU1wrkdLF6r8oPcYtTC0mjeV2pL67fm5ottNjiG5NGGLndCpdCuhMkuR9AQ9XRPkqcNLbr9LwAAAP%2F%2FAwBQSwMEFAAGAAgAAAAhAA3RkJ%2B2AAAAGwEAACcAAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAUhPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY%2FJFHs7Q2uLAguh2G%2BmWm7l53JE2My3jFoqhoIOumVcZrBbbjsjkBSFk6J2TtksGCCjm837RVnkUsoTSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI93V9oPGbAXzFJL1iEHvVABmWUJr%2Fs%2F04GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA%2F%2F8DAFBLAQItABQABgAIAAAAIQDp3g%2B%2F%2FwAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVudF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAKXWp%2BfAAAAANgEAAAsAAAAAAAAAAAAAAAAAMAEAAF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAGQIAAHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdlci54bWxQSwECLQAUAAYACAAAACEAwjqO9eAGAACzHwAAFgAAAAAAAAAAAAAAAADWAgAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAAAOoJAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHNQSwUGAAAAAAUABQBdAQAA5QoAAAAAPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI%2FPg0KPGE6Y2xyTWFwIHhtbG5zOmE9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9kcmF3aW5nbWwvMjAwNi9tYWluIiBiZzE9Imx0MSIgdHgxPSJkazEiIGJnMj0ibHQyIiB0eDI9ImRrMiIgYWNjZW50MT0iYWNjZW50MSIgYWNjZW50Mj0iYWNjZW50MiIgYWNjZW50Mz0iYWNjZW50MyIgYWNjZW50ND0iYWNjZW50NCIgYWNjZW50NT0iYWNjZW50NSIgYWNjZW50Nj0iYWNjZW50NiIgaGxpbms9ImhsaW5rIiBmb2xIbGluaz0iZm9sSGxpbmsiLz4AAAAAGggAAC0AABYAAAAA%2F%2F%2F%2F%2FwAIAAAaEAAACQAAAAAIAAAaEAAACgAAAA8AAPA4AAAAAAAG8BgAAAACBAAAAgAAAAEAAAABAAAAAQAAAAIAAABAAB7xEAAAAP%2F%2FAAAAAP8AgICAAPcAABAADwAC8JIAAAAQAAjwCAAAAAEAAAABBAAADwAD8DAAAAAPAATwKAAAAAEACfAQAAAAAAAAAAAAAAAAAAAAAAAAAAIACvAIAAAAAAQAAAUAAAAPAATwQgAAABIACvAIAAAAAQQAAAAOAABTAAvwHgAAAL8BAAAQAMsBAAAAAP8BAAAIAAQDCQAAAD8DAQABAAAAEfAEAAAAAQAAAAAAAAAZBgAAIwYAABwIAAAHABwABwAAAAAAKwMAADQDAAC0BAAAvQQAABwIAAAHADMABwAzAAcAAwAAAAQAAAAIAAAA5QAAAAAAAAACAAAAEQQqAPl9MgCnVegAAAAAABoIAAAcCAAAAAAAAAEAAAD%2FQAGAAQAZCAAAGQgAAAAAAAABAAEAGQgAAAAAAAAZCAAAAAAAAAIQAAAAAAAAABoIAABoAQAQAEAAAP%2F%2FAQAAAAcAVQBuAGsAbgBvAHcAbgD%2F%2FwEACAAAAAAAAAAAAAAA%2F%2F8BAAAAAAD%2F%2FwAAAgD%2F%2FwAAAAD%2F%2FwAAAgD%2F%2FwAAAAAGAAAARx6QAQAAAgIGAwUEBQIDBP8uAOBbeADACQAAAAAAAAD%2FAQAAAAAAAFQAaQBtAGUAcwAgAE4AZQB3ACAAUgBvAG0AYQBuAAAANR6QAQIABQUBAgEHBgIFBwAAAAAAAAAQAAAAAAAAAAAAAACAAAAAAFMAeQBtAGIAbwBsAAAAMy6QAQAAAgsGBAICAgICBP8uAOBbeADACQAAAAAAAAD%2FAQAAAAAAAEEAcgBpAGEAbAAAADcukAEAAAIPBQICAgQDAgT%2FLgDkeyQAwAkAAAAAAAAA%2FwEAAAAAAABDAGEAbABpAGIAcgBpAAAAQy4sAQAAAg8DAgICBAMCBP8uAOR7JADACQAAAAAAAAD%2FAQAAAAAAAEMAYQBsAGkAYgByAGkAIABMAGkAZwBoAHQAAABBFpABAAACBAUDBQQGAwIEAwAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAQwBhAG0AYgByAGkAYQAgAE0AYQB0AGgAAAAiAAQAcQiAGADw0AIAAGgBAAAAAGJyiSdicoknAAAAAAIAAAAAADUBAADlBgAAAgAEAAAABAADkA4AAAA1AQAA5QYAAAIABAAAAA4AAAAAAAAAIQMA8BAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAWgBbQAtACBgTIwAAAAAAAAAAAAAAAAAAAWCAAAFggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAS4MRAPAQAAgA%2FP0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEBQAAAAAAnw%2Fw8ACSRQAADkBAAA%2F%2F%2F%2Ff%2F%2F%2F%2F3%2F%2F%2F%2F9%2F%2F%2F%2F%2Ff%2F%2F%2F%2F3%2F%2F%2F%2F9%2F%2F%2F%2F%2Ff6dV6AAABAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAACEEAAAAAAAAAAAAAAAAAAAAAAAAEBwAAAUAAAAAAAAAAAB4AAAAeAAAAAAAAAAAAAAAoAUAAIxKzCoLAAAAAAAAANwAAAABAAAA%2F%2F8SAAAAAAAAAAAAAAAAAAAACABMAGkAbgBnAGwAaQBuAGcACABMAGkAbgBnAGwAaQBuAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7%2FAAAKAAIAAAAAAAAAAAAAAAAAAAAAAAEAAADghZ%2Fy%2BU9oEKuRCAArJ7PZMAAAAHABAAARAAAAAQAAAJAAAAACAAAAmAAAAAMAAACkAAAABAAAALAAAAAFAAAAxAAAAAYAAADQAAAABwAAANwAAAAIAAAA7AAAAAkAAAAAAQAAEgAAAAwBAAAKAAAALAEAAAwAAAA4AQAADQAAAEQBAAAOAAAAUAEAAA8AAABYAQAAEAAAAGABAAATAAAAaAEAAAIAAADkBAAAHgAAAAQAAAAAAAAAHgAAAAQAAAAAAAAAHgAAAAwAAABMaW5nbGluZwAAAAAeAAAABAAAAAAAAAAeAAAABAAAAAAAAAAeAAAACAAAAE5vcm1hbAAAHgAAAAwAAABMaW5nbGluZwAAAAAeAAAABAAAADIAAAAeAAAAGAAAAE1pY3Jvc29mdCBPZmZpY2UgV29yZAAAAEAAAAAAAAAAAAAAAEAAAAAAjGTZtIrWAUAAAAAAjGTZtIrWAQMAAAACAAAAAwwAACgACAAAAAAAAAAAAAAAAAAAAAAABAAAAAtXN1ZwuGxCTlwgAKyz5rjAAAADoAAAADAAAAAEAAABoAAAADwAAAHAAAAAFAAAAfAAAAAYAAACEAAAAEQAAAIwAAAAXAAAAlAAAAAsAAACcAAAAEAAAAKQAAAATAAAArAAAABYAAAC0AAAADQAAALwAAAAMAAAAyQAAAAIAAADkBAAAHgAAAAQAAAAAAAAAAwAAAA4AAAADAAAABAAAAAMAAAAWCAAAAwAAAAAAEAALAAAAAAAAAAsAAAAAAAAACwAAAAAAAAALAAAAAAAAAB4QAAABAAAAAQAAAAAMEAAAAgAAAB4AAAAGAAAAVGl0bGUAAwwAAAAgAAAAJAAAACgAAAAsAAAD%2B%2F%2F%2F%2FDQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAAP7%2F%2F%2F8VAAAAFgAAABcAAAAYAAAAGQAAABoAAAAbAAAAHAAAAB0AAAAeAAAAHwAAACAAAAAhAAAA%2Fv%2F%2F%2FyMAAAAkAAAAJQAAACYAAAAnAAAAKAAAACkAAAD%2B%2F%2F%2F%2FKwAAACwAAAAtAAAALgAAAC8AAAAwAAAAMQAAAP7%2F%2F%2F%2F9%2F%2F%2F%2FNAAAADcAAAD%2B%2F%2F%2F%2FOQAAADgAAAD%2B%2F%2F%2F%2F%2Fv%2F%2F%2FzsAAAA8AAAAPQAAAD4AAAA%2FAAAAQAAAAEEAAABCAAAAQwAAAEQAAABFAAAARgAAAEcAAABIAAAASQAAAEoAAABLAAAATAAAAE0AAABOAAAATwAAAFAAAABRAAAA%2FvbwB0ACAARQBuAHQAcgB5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAFAf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FAwAAAAYJAgAAAAAAwAAAAAAAAEYAAAAAAAAAAAAAAADwqZ5qY9XWATYAAACAAwAAAAAAAEQAYQB0AGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAIB%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAQAAAAAAAAMQBUAGEAYgBsAGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAgABAAAA%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAARBsAAAAAAABXAG8AcgBkAEQAbwBjAHUAbQBlAG4AdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgACAQYAAAAFAAAA%2F%2F%2F%2F%2FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuFgAAAAAAAAUAUwB1AG0AbQBhAHIAeQBJAG4AZgBvAHIAbQBhAHQAaQBvAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAIB%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAQAAAAAAAABQBEAG8AYwB1AG0AZQBuAHQAUwB1AG0AbQBhAHIAeQBJAG4AZgBvAHIAbQBhAHQAaQBvAG4AAAAAAAAAAAAAADgAAgEEAAAA%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAABAAAAAAAAABAEMAbwBtAHAATwBiAGoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgACAQIAAAAHAAAA%2F%2F%2F%2F%2FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAAAAAAE0AcwBvAEQAYQB0AGEAUwB0AG8AcgBlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAEA%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwqZ5qY9XWAfCpnmpj1dYBAAAAAAAAAAAAAAAAAQAAAP7%2F%2F%2F8DAAAABAAAAAUAAAD%2B%2F%2F%2F%2FBwAAAAgAAAAJAAAA%2Fv%2F%2F%2FwswoAAP%2F%2F%2F%2F8GCQIAAAAAAMAAAAAAAABGIAAAAE1pY3Jvc29mdCBXb3JkIDk3LTIwMDMgRG9jdW1lbnQACgAAAE1TV29yZERvYwAQAAAAV29yZC5Eb2N1bWVudC44APQ5snEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw%2FbXNvLWNvbnRlbnRUeXBlPz48Rm9ybVRlbXBsYXRlcyB4bWxucz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zaGFyZXBvaW50L3YzL2NvbnRlbnR0eXBlL2Zvcm1zIj48RGlzcGxheT5Eb2N1bWVudExpYnJhcnlGb3JtPC9EaXNwbGF5PjxFZGl0PkRvY3VtZW50TGlicmFyeUZvcm08L0VkaXQ%2BPE5ldz5Eb2N1bWVudExpYnJhcnlGb3JtPC9OZXc%2BPC9Gb3JtVGVtcGxhdGVzPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCIgc3RhbmRhbG9uZT0ibm8iPz4NCjxkczpkYXRhc3RvcmVJdGVtIGRzOml0ZW1JRD0ie0JCMkY2QUNCLTUzNjEtNDVDNi1CRkNFLUU5QjcyRjA4RTI1NH0iIHhtbNIA1gDIAM8AzgDWAEYAVADRAMQAVwDfANMAzgDGANcATADQAMMAwgBWAEEAPQA9AAAAAAAAAAAAAAAAAAAAAAAyAAEBCwAAAP%2F%2F%2F%2F8JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwqZ5qY9XWAfCpnmpj1dYBAAAAAAAAAAAAAAAASQB0AGUAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAgH%2F%2F%2F%2F%2FCgAAAP%2F%2F%2F%2F8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAA2wAAAAAAAABQAHIAbwBwAGUAcgB0AGkAZQBzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgACAP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAADJAAAAAAAAAMMAwgBQANgA2QBEAMgAQgA0AMQA0gBFAMoA2gAzAMIANAAzAMwAwADGAEEAPQA9AAAAAAAAAAAAAAAAAAAAAAAyAAEA%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwqZ5qY9XWAfCpnmpj1dYBAAAAAAAAAAAAAAAASQB0AGUAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAgH%2F%2F%2F%2F%2FDQAAAP%2F%2F%2F%2F8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAA9y4AAAAAAABQAHIAbwBwAGUAcgB0AGkAZQBzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgACAP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuczpkcz0iaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL29mZmljZURvY3VtZW50LzIwMDYvY3VzdG9tWG1sIi8%2BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw%2FeG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJubyI%2FPg0KPGRzOmRhdGFzdG9yZUl0ZW0gZHM6aXRlbUlEPSJ7RTRGODIzOEUtMDEzQS00QzdBLTg0QUItQTc2Mjc5REIyMDk4fSIgeG1sbnM6ZHM9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9vZmZpY2VEb2N1bWVudC8yMDA2L2N1c3RvbVhtbCIvPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw%2FeG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04Ij8%2BPGN0OmNvbnRlbnRUeXBlU2NoZW1hIGN0Ol89IiIgbWE6Xz0iIiBtYTpjb250ZW50VHlwZU5hbWU9IkRvY3VtZW50IiBtYTpjb250ZW50VHlwZUlEPSIweDAxMDEwMDJDNTExQzE2RTc4NjlBNDlCNkFCREZERjIyODFBMTVDIiBtYTpjb250ZW50VHlwZVZlcnNpb249IjExIiBtYTpjb250ZW50VHlwZURlc2NyaXB0aW9uPSJDcmVhdGUgYSBuZXcgZG9jdW1lbnQuIiBtYTpjb250ZW50VHlwZVNjb3BlPSIiIG1hOnZlcnNpb25JRD0iYjlkYWEzNTZkODA3MmFlZTk3ZGI4ZjY2NmJlNDBiZTMiIHhtbG5zOmN0PSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS8yMDA2L21ldGFkYXRhL2NvbnRlbnRUeXBlIiB4bWxuczptYT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2UvMjAwNi9tZXRhZGF0YS9wcm9wZXJ0aWVzL21ldGFBdHRyaWJ1dGVzIj4NCjx4c2Q6c2NoZW1hIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2UvMjAwNi9tZXRhZGF0YS9wcm9wZXJ0aWVzIiBtYTpyb290PSJ0cnVlIiBtYTpmaWVsZHNJRD0iNDQ0YWNjOWI2Yzc3NjBkMGQyMWUzZmNhMzIyZjVhYzMiIG5zMjpfPSIiIG5zMzpfPSIiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6cD0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2UvMjAwNi9tZXRhZGF0YS9wcm9wZXJ0aWVzIiB4bWxuczpuczI9IjBiMzYxYzE2LWJmYzQtNDliMC1iNWNiLWJjOGNlY2JiMmNjNyIgeG1sbnM6bnMzPSJmNTgzYjRhNy04ZWQzLTQyMzQtYjcxMy01ZTA1NWEwYzhkYTQiPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSIwYjM2MWMxNi1iZmM0LTQ5YjAtYjVjYi1iYzhjZWNiYjJjYzciLz4NCjx4c2Q6aW1wb3J0IG5hbWVzcGFjZT0iZjU4M2I0YTctOGVkMy00MjM0LWI3MTMtNWUwNTVhMGM4ZGE0Ii8%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0icHJvcGVydGllcyI%2BDQo8eHNkOmNvbXBsZXhUeXBlPg0KPHhzZDpzZXF1ZW5jZT4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJkb2N1bWVudE1hbmFnZW1lbnQiPg0KPHhzZDpjb21wbGV4VHlwZT4NCjx4c2Q6YWxsPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZU1ldGFkYXRhIiBtaW5PY2N1cnM9IjAiLz4NCjx4c2Q6ZWxlbWVudCByZWY9Im5zMjpNZWRpYVNlcnZpY2VGYXN0TWV0YWRhdGEiIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZURhdGVUYWtlbiIgbWluT2NjdXJzPSIwIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJuczI6TWVkaWFTZXJ2aWNlQXV0b1RhZ3MiIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZU9DUiIgbWluT2NjdXJzPSIwIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJuczI6TWVkaWFTZXJ2aWNlR2VuZXJhdGlvblRpbWUiIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZUV2ZW50SGFzaENvZGUiIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZUF1dG9LZXlQb2ludHMiIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IHJlZj0ibnMyOk1lZGlhU2VydmljZUtleVBvaW50cyIgbWluT2NjdXJzPSIwIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJuczM6U2hhcmVkV2l0aFVzZXJzIiBtaW5PY2N1cnM9IjAiLz4NCjx4c2Q6ZWxlbWVudCByZWY9Im5zMzpTaGFyZWRXaXRoRGV0YWlscyIgbWluT2NjdXJzPSIwIi8%2BDQo8L3hzZDphbGw%2BDQo8L3hzZDpjb21wbGV4VHlwZT4NCjwveHNkOmVsZW1lbnQ%2BDQo8L3hzZDpzZXF1ZW5jZT4NCjwveHNkOmNvbXBsZXhUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjwveHNkOnNjaGVtYT4NCjx4c2Q6c2NoZW1hIHRhcmdldE5hbWVzcGFjZT0iMGIzNjFjMTYtYmZjNC00OWIwLWI1Y2ItYmM4Y2VjYmIyY2M3IiBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpkbXM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vb2ZmaWNlLzIwMDYvZG9jdW1lbnRNYW5hZ2VtZW50L3R5cGVzIiB4bWxuczpwYz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2UvaW5mb3BhdGgvMjAwNy9QYXJ0bmVyQ29udHJvbHMiPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS8yMDA2L2RvY3VtZW50TWFuYWdlbWVudC90eXBlcyIvPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS9pbmZvcGF0aC8yMDA3L1BhcnRuZXJDb250cm9scyIvPg0KPHhzZDplbGVtZW50IG5hbWU9Ik1lZGlhU2VydmljZU1ldGFkYXRhIiBtYTppbmRleD0iOCIgbmlsbGFibGU9InRydWUiIG1hOmRpc3BsYXlOYW1lPSJNZWRpYVNlcnZpY2VNZXRhZGF0YSIgbWE6aGlkZGVuPSJ0cnVlIiBtYTppbnRlcm5hbE5hbWU9Ik1lZGlhU2VydmljZU1ldGFkYXRhIiBtYTpyZWFkT25seT0idHJ1ZSI%2BDQo8eHNkOnNpbXBsZVR5cGU%2BDQo8eHNkOnJlc3RyaWN0aW9uIGJhc2U9ImRtczpOb3RlIi8%2BDQo8L3hzZDpzaW1wbGVUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJNZWRpYVNlcnZpY2VGYXN0TWV0YWRhdGEiIG1hOmluZGV4PSI5IiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9Ik1lZGlhU2VydmljZUZhc3RNZXRhZGF0YSIgbWE6aGlkZGVuPSJ0cnVlIiBtYTppbnRlcm5hbE5hbWU9Ik1lZGlhU2VydmljZUZhc3RNZXRhZGF0YSIgbWE6cmVhZE9ubHk9InRydWUiPg0KPHhzZDpzaW1wbGVUeXBlPg0KPHhzZDpyZXN0cmljdGlvbiBiYXNlPSJkbXM6Tm90ZSIvPg0KPC94c2Q6c2ltcGxlVHlwZT4NCjwveHNkOmVsZW1lbnQ%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0iTWVkaWFTZXJ2aWNlRGF0ZVRha2VuIiBtYTppbmRleD0iMTAiIG5pbGxhYmxlPSJ0cnVlIiBtYTpkaXNwbGF5TmFtZT0iTWVkaWFTZXJ2aWNlRGF0ZVRha2VuIiBtYTpoaWRkZW49InRydWUiIG1hOmludGVybmFsTmFtZT0iTWVkaWFTZXJ2aWNlRGF0ZVRha2VuIiBtYTpyZWFkT25seT0idHJ1ZSI%2BDQo8eHNkOnNpbXBsZVR5cGU%2BDQo8eHNkOnJlc3RyaWN0aW9uIGJhc2U9ImRtczpUZXh0Ii8%2BDQo8L3hzZDpzaW1wbGVUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJNZWRpYVNlcnZpY2VBdXRvVGFncyIgbWE6aW5kZXg9IjExIiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9IlRhZ3MiIG1hOmludGVybmFsTmFtZT0iTWVkaWFTZXJ2aWNlQXV0b1RhZ3MiIG1hOnJlYWRPbmx5PSJ0cnVlIj4NCjx4c2Q6c2ltcGxlVHlwZT4NCjx4c2Q6cmVzdHJpY3Rpb24gYmFzZT0iZG1zOlRleHQiLz4NCjwveHNkOnNpbXBsZVR5cGU%2BDQo8L3hzZDplbGVtZW50Pg0KPHhzZDplbGVtZW50IG5hbWU9Ik1lZGlhU2VydmljZU9DUiIgbWE6aW5kZXg9IjEyIiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9IkV4dHJhY3RlZCBUZXh0IiBtYTppbnRlcm5hbE5hbWU9Ik1lZGlhU2VydmljZU9DUiIgbWE6cmVhZE9ubHk9InRydWUiPg0KPHhzZDpzaW1wbGVUeXBlPg0KPHhzZDpyZXN0cmljdGlvbiBiYXNlPSJkbXM6Tm90ZSI%2BDQo8eHNkOm1heExlbmd0aCB2YWx1ZT0iMjU1Ii8%2BDQo8L3hzZDpyZXN0cmljdGlvbj4NCjwveHNkOnNpbXBsZVR5cGU%2BDQo8L3hzZDplbGVtZW50Pg0KPHhzZDplbGVtZW50IG5hbWU9Ik1lZGlhU2VydmljZUdlbmVyYXRpb25UaW1lIiBtYTppbmRleD0iMTMiIG5pbGxhYmxlPSJ0cnVlIiBtYTpkaXNwbGF5TmFtZT0iTWVkaWFTZXJ2aWNlR2VuZXJhdGlvblRpbWUiIG1hOmhpZGRlbj0idHJ1ZSIgbWE6aW50ZXJuYWxOYW1lPSJNZWRpYVNlcnZpY2VHZW5lcmF0aW9uVGltZSIgbWE6cmVhZE9ubHk9InRydWUiPg0KPHhzZDpzaW1wbGVUeXBlPg0KPHhzZDpyZXN0cmljdGlvbiBiYXNlPSJkbXM6VGV4dCIvPg0KPC94c2Q6c2ltcGxlVHlwZT4NCjwveHNkOmVsZW1lbnQ%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0iTWVkaWFTZXJ2aWNlRXZlbnRIYXNoQ29kZSIgbWE6aW5kZXg9IjE0IiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9Ik1lZGlhU2VydmljZUV2ZW50SGFzaENvZGUiIG1hOmhpZGRlbj0idHJ1ZSIgbWE6aW50ZXJuYWxOYW1lPSJNZWRpYVNlcnZpY2VFdmVudEhhc2hDb2RlIiBtYTpyZWFkT25seT0idHJ1ZSI%2BDQo8eHNkOnNpbXBsZVR5cGU%2BDQo8eHNkOnJlc3RyaWN0aW9uIGJhc2U9ImRtczpUZXh0Ii8%2BDQo8L3hzZDpzaW1wbGVUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJNZWRpYVNlcnZpY2VBdXRvS2V5UG9pbnRzIiBtYTppbmRleD0iMTUiIG5pbGxhYmxlPSJ0cnVlIiBtYTpkaXNwbGF5TmFtZT0iTWVkaWFTZXJ2aWNlQXV0b0tleVBvaW50cyIgbWE6aGlkZGVuPSJ0cnVlIiBtYTppbnRlcm5hbE5hbWU9Ik1lZGlhU2VydmljZUF1dG9LZXlQb2ludHMiIG1hOnJlYWRPbmx5PSJ0cnVlIj4NCjx4c2Q6c2ltcGxlVHlwZT4NCjx4c2Q6cmVzdHJpY3Rpb24gYmFzZT0iZG1zOk5vdGUiLz4NCjwveHNkOnNpbXBsZVR5cGU%2BDQo8L3hzZDplbGVtZW50Pg0KPHhzZDplbGVtZW50IG5hbWU9Ik1lZGlhU2VydmljZUtleVBvaW50cyIgbWE6aW5kZXg9IjE2IiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9IktleVBvaW50cyIgbWE6aW50ZXJuYWxOYW1lPSJNZWRpYVNlcnZpY2VLZXlQb2ludHMiIG1hOnJlYWRPbmx5PSJ0cnVlIj4NCjx4c2Q6c2ltcGxlVHlwZT4NCjx4c2Q6cmVzdHJpY3Rpb24gYmFzZT0iZG1zOk5vdGUiPg0KPHhzZDptYXhMZW5ndGggdmFsdWU9IjI1NSIvPg0KPC94c2Q6cmVzdHJpY3Rpb24%2BDQo8L3hzZDpzaW1wbGVUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjwveHNkOnNjaGVtYT4NCjx4c2Q6c2NoZW1hIHRhcmdldE5hbWVzcGFjZT0iZjU4M2I0YTctOGVkMy00MjM0LWI3MTMtNWUwNTVhMGM4ZGE0IiBlbGVtZW50Rm9ybURlZmF1bHQ9InF1YWxpZmllZCIgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpkbXM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vb2ZmaWNlLzIwMDYvZG9jdW1lbnRNYW5hZ2VtZW50L3R5cGVzIiB4bWxuczpwYz0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2UvaW5mb3BhdGgvMjAwNy9QYXJ0bmVyQ29udHJvbHMiPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS8yMDA2L2RvY3VtZW50TWFuYWdlbWVudC90eXBlcyIvPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS9pbmZvcGF0aC8yMDA3L1BhcnRuZXJDb250cm9scyIvPg0KPHhzZDplbGVtZW50IG5hbWU9IlNoYXJlZFdpdGhVc2VycyIgbWE6aW5kZXg9IjE3IiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9IlNoYXJlZCBXaXRoIiBtYTppbnRlcm5hbE5hbWU9IlNoYXJlZFdpdGhVc2VycyIgbWE6cmVhZE9ubHk9InRydWUiPg0KPHhzZDpjb21wbGV4VHlwZT4NCjx4c2Q6Y29tcGxleENvbnRlbnQ%2BDQo8eHNkOmV4dGVuc2lvbiBiYXNlPSJkbXM6VXNlck11bHRpIj4NCjx4c2Q6c2VxdWVuY2U%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0iVXNlckluZm8iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiPg0KPHhzZDpjb21wbGV4VHlwZT4NCjx4c2Q6c2VxdWVuY2U%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0iRGlzcGxheU5hbWUiIHR5cGU9InhzZDpzdHJpbmciIG1pbk9jY3Vycz0iMCIvPg0KPHhzZDplbGVtZW50IG5hbWU9IkFjY291bnRJZCIgdHlwZT0iZG1zOlVzZXJJZCIgbWluT2NjdXJzPSIwIiBuaWxsYWJsZT0idHJ1ZSIvPg0KPHhzZDplbGVtZW50IG5hbWU9IkFjY291bnRUeXBlIiB0eXBlPSJ4c2Q6c3RyaW5nIiBtaW5PY2N1cnM9IjAiLz4NCjwveHNkOnNlcXVlbmNlPg0KPC94c2Q6Y29tcGxleFR5cGU%2BDQo8L3hzZDplbGVtZW50Pg0KPC94c2Q6c2VxdWVuY2U%2BDQo8L3hzZDpleHRlbnNpb24%2BDQo8L3hzZDpjb21wbGV4Q29udGVudD4NCjwveHNkOmNvbXBsZXhUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJTaGFyZWRXaXRoRGV0YWlscyIgbWE6aW5kZXg9IjE4IiBuaWxsYWJsZT0idHJ1ZSIgbWE6ZGlzcGxheU5hbWU9IlNoYXJlZCBXaXRoIERldGFpbHMiIG1hOmludGVybmFsTmFtZT0iU2hhcmVkV2l0aERldGFpbHMiIG1hOnJlYWRPbmx5PSJ0cnVlIj4NCjx4c2Q6c2ltcGxlVHlwZT4NCjx4c2Q6cmVzdHJpY3Rpb24gYmFzZT0iZG1zOk5vdGUiPg0KPHhzZDptYXhMZW5ndGggdmFsdWU9IjI1NSIvPg0KPC94c2Q6cmVzdHJpY3Rpb24%2BDQo8L3hzZDpzaW1wbGVUeXBlPg0KPC94c2Q6ZWxlbWVudD4NCjwveHNkOnNjaGVtYT4NCjx4c2Q6c2NoZW1hIHRhcmdldE5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9tZXRhZGF0YS9jb3JlLXByb3BlcnRpZXMiIGVsZW1lbnRGb3JtRGVmYXVsdD0icXVhbGlmaWVkIiBhdHRyaWJ1dGVGb3JtRGVmYXVsdD0idW5xdWFsaWZpZWQiIGJsb2NrRGVmYXVsdD0iI2FsbCIgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9wYWNrYWdlLzIwMDYvbWV0YWRhdGEvY29yZS1wcm9wZXJ0aWVzIiB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOmRjdGVybXM9Imh0dHA6Ly9wdXJsLm9yZy9kYy90ZXJtcy8iIHhtbG5zOm9kb2M9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vaW50ZXJuYWwvb2JkIj4NCjx4c2Q6aW1wb3J0IG5hbWVzcGFjZT0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZHVibGluY29yZS5vcmcvc2NoZW1hcy94bWxzL3FkYy8yMDAzLzA0LzAyL2RjLnhzZCIvPg0KPHhzZDppbXBvcnQgbmFtZXNwYWNlPSJodHRwOi8vcHVybC5vcmcvZGMvdGVybXMvIiBzY2hlbWFMb2NhdGlvbj0iaHR0cDovL2R1YmxpbmNvcmUub3JnL3NjaGVtYXMveG1scy9xZGMvMjAwMy8wNC8wMi9kY3Rlcm1zLnhzZCIvPg0KPHhzZDplbGVtZW50IG5hbWU9ImNvcmVQcm9wZXJ0aWVzIiB0eXBlPSJDVF9jb3JlUHJvcGVydGllcyIvPg0KPHhzZDpjb21wbGV4VHlwZSBuYW1lPSJDVF9jb3JlUHJvcGVydGllcyI%2BDQo8eHNkOmFsbD4NCjx4c2Q6ZWxlbWVudCByZWY9ImRjOmNyZWF0b3IiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJkY3Rlcm1zOmNyZWF0ZWQiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJkYzppZGVudGlmaWVyIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPg0KPHhzZDplbGVtZW50IG5hbWU9ImNvbnRlbnRUeXBlIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIgdHlwZT0ieHNkOnN0cmluZyIgbWE6aW5kZXg9IjAiIG1hOmRpc3BsYXlOYW1lPSJDb250ZW50IFR5cGUiLz4NCjx4c2Q6ZWxlbWVudCByZWY9ImRjOnRpdGxlIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIgbWE6aW5kZXg9IjQiIG1hOmRpc3BsYXlOYW1lPSJUaXRsZSIvPg0KPHhzZDplbGVtZW50IHJlZj0iZGM6c3ViamVjdCIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiLz4NCjx4c2Q6ZWxlbWVudCByZWY9ImRjOmRlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPg0KPHhzZDplbGVtZW50IG5hbWU9ImtleXdvcmRzIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIgdHlwZT0ieHNkOnN0cmluZyIvPg0KPHhzZDplbGVtZW50IHJlZj0iZGM6bGFuZ3VhZ2UiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0iY2F0ZWdvcnkiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIiB0eXBlPSJ4c2Q6c3RyaW5nIi8%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0idmVyc2lvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiIHR5cGU9InhzZDpzdHJpbmciLz4NCjx4c2Q6ZWxlbWVudCBuYW1lPSJyZXZpc2lvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiIHR5cGU9InhzZDpzdHJpbmciPg0KPHhzZDphbm5vdGF0aW9uPg0KPHhzZDpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyB2YWx1ZSBpbmRpY2F0ZXMgdGhlIG51bWJlciBvZiBzYXZlcyBvciByZXZpc2lvbnMuIFRoZSBhcHBsaWNhdGlvbiBpcyByZXNwb25zaWJsZSBmb3IgdXBkYXRpbmcgdGhpcyB2YWx1ZSBhZnRlciBlYWNoIHJldmlzaW9uLg0KICAgICAgICAgICAgICAgICAgICA8L3hzZDpkb2N1bWVudGF0aW9uPg0KPC94c2Q6YW5ub3RhdGlvbj4NCjwveHNkOmVsZW1lbnQ%2BDQo8eHNkOmVsZW1lbnQgbmFtZT0ibGFzdE1vZGlmaWVkQnkiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIiB0eXBlPSJ4c2Q6c3RyaW5nIi8%2BDQo8eHNkOmVsZW1lbnQgcmVmPSJkY3Rlcm1zOm1vZGlmaWVkIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPg0KPHhzZDplbGVtZW50IG5hbWU9ImNvbnRlbnRTdGF0dXMiIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIiB0eXBlPSJ4c2Q6c3RyaW5nIi8%2BDQo8L3hzZDphbGw%2BDQo8L3hzZDpjb21wbGV4VHlwZT4NCjwveHNkOnNjaGVtYT4NCjx4czpzY2hlbWEgdGFyZ2V0TmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS9pbmZvcGF0aC8yMDA3L1BhcnRuZXJDb250cm9scyIgZWxlbWVudEZvcm1EZWZhdWx0PSJxdWFsaWZpZWQiIGF0dHJpYnV0ZUZvcm1EZWZhdWx0PSJ1bnF1YWxpZmllZCIgeG1sbnM6cGM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vb2ZmaWNlL2luZm9wYXRoLzIwMDcvUGFydG5lckNvbnRyb2xzIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiPg0KPHhzOmVsZW1lbnQgbmFtZT0iUGVyc29uIj4NCjx4czpjb21wbGV4VHlwZT4NCjx4czpzZXF1ZW5jZT4NCjx4czplbGVtZW50IHJlZj0icGM6RGlzcGxheU5hbWUiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpBY2NvdW50SWQiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpBY2NvdW50VHlwZSIgbWluT2NjdXJzPSIwIj48L3hzOmVsZW1lbnQ%2BDQo8L3hzOnNlcXVlbmNlPg0KPC94czpjb21wbGV4VHlwZT4NCjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IkRpc3BsYXlOYW1lIiB0eXBlPSJ4czpzdHJpbmciPjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IkFjY291bnRJZCIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJBY2NvdW50VHlwZSIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJCRENBc3NvY2lhdGVkRW50aXR5Ij4NCjx4czpjb21wbGV4VHlwZT4NCjx4czpzZXF1ZW5jZT4NCjx4czplbGVtZW50IHJlZj0icGM6QkRDRW50aXR5IiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIj48L3hzOmVsZW1lbnQ%2BDQo8L3hzOnNlcXVlbmNlPg0KPHhzOmF0dHJpYnV0ZSByZWY9InBjOkVudGl0eU5hbWVzcGFjZSI%2BPC94czphdHRyaWJ1dGU%2BDQo8eHM6YXR0cmlidXRlIHJlZj0icGM6RW50aXR5TmFtZSI%2BPC94czphdHRyaWJ1dGU%2BDQo8eHM6YXR0cmlidXRlIHJlZj0icGM6U3lzdGVtSW5zdGFuY2VOYW1lIj48L3hzOmF0dHJpYnV0ZT4NCjx4czphdHRyaWJ1dGUgcmVmPSJwYzpBc3NvY2lhdGlvbk5hbWUiPjwveHM6YXR0cmlidXRlPg0KPC94czpjb21wbGV4VHlwZT4NCjwveHM6ZWxlbWVudD4NCjx4czphdHRyaWJ1dGUgbmFtZT0iRW50aXR5TmFtZXNwYWNlIiB0eXBlPSJ4czpzdHJpbmciPjwveHM6YXR0cmlidXRlPg0KPHhzOmF0dHJpYnV0ZSBuYW1lPSJFbnRpdHlOYW1lIiB0eXBlPSJ4czpzdHJpbmciPjwveHM6YXR0cmlidXRlPg0KPHhzOmF0dHJpYnV0ZSBuYW1lPSJTeXN0ZW1JbnN0YW5jZU5hbWUiIHR5cGU9InhzOnN0cmluZyI%2BPC94czphdHRyaWJ1dGU%2BDQo8eHM6YXR0cmlidXRlIG5hbWU9IkFzc29jaWF0aW9uTmFtZSIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmF0dHJpYnV0ZT4NCjx4czplbGVtZW50IG5hbWU9IkJEQ0VudGl0eSI%2BDQo8eHM6Y29tcGxleFR5cGU%2BDQo8eHM6c2VxdWVuY2U%2BDQo8eHM6ZWxlbWVudCByZWY9InBjOkVudGl0eURpc3BsYXlOYW1lIiBtaW5PY2N1cnM9IjAiPjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IHJlZj0icGM6RW50aXR5SW5zdGFuY2VSZWZlcmVuY2UiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpFbnRpdHlJZDEiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpFbnRpdHlJZDIiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpFbnRpdHlJZDMiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpFbnRpdHlJZDQiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpFbnRpdHlJZDUiIG1pbk9jY3Vycz0iMCI%2BPC94czplbGVtZW50Pg0KPC94czpzZXF1ZW5jZT4NCjwveHM6Y29tcGxleFR5cGU%2BDQo8L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJFbnRpdHlEaXNwbGF5TmFtZSIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJFbnRpdHlJbnN0YW5jZVJlZmVyZW5jZSIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJFbnRpdHlJZDEiIHR5cGU9InhzOnN0cmluZyI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgbmFtZT0iRW50aXR5SWQyIiB0eXBlPSJ4czpzdHJpbmciPjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IkVudGl0eUlkMyIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCBuYW1lPSJFbnRpdHlJZDQiIHR5cGU9InhzOnN0cmluZyI%2BPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgbmFtZT0iRW50aXR5SWQ1IiB0eXBlPSJ4czpzdHJpbmciPjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IlRlcm1zIj4NCjx4czpjb21wbGV4VHlwZT4NCjx4czpzZXF1ZW5jZT4NCjx4czplbGVtZW50IHJlZj0icGM6VGVybUluZm8iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiPjwveHM6ZWxlbWVudD4NCjwveHM6c2VxdWVuY2U%2BDQo8L3hzOmNvbXBsZXhUeXBlPg0KPC94czplbGVtZW50Pg0KPHhzOmVsZW1lbnQgbmFtZT0iVGVybUluZm8iPg0KPHhzOmNvbXBsZXhUeXBlPg0KPHhzOnNlcXVlbmNlPg0KPHhzOmVsZW1lbnQgcmVmPSJwYzpUZXJtTmFtZSIgbWluT2NjdXJzPSIwIj48L3hzOmVsZW1lbnQ%2BDQo8eHM6ZWxlbWVudCByZWY9InBjOlRlcm1JZCIgbWluT2NjdXJzPSIwIj48L3hzOmVsZW1lbnQ%2BDQo8L3hzOnNlcXVlbmNlPg0KPC94czpjb21wbGV4VHlwZT4NCjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IlRlcm1OYW1lIiB0eXBlPSJ4czpzdHJpbmciPjwveHM6ZWxlbWVudD4NCjx4czplbGVtZW50IG5hbWU9IlRlcm1JZCIgdHlwZT0ieHM6c3RyaW5nIj48L3hzOmVsZW1lbnQ%2BDQo8L3hzOnNjaGVtYT4NCjwvY3Q6Y29udGVudFR5cGVTY2hlbWE%2BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/generateVerificationCode",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"generateVerificationCode"
					],
					"query": [
						{
							"key": "version",
							"value": "{{appVersion}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVerificationCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"console.log(data);",
							"",
							"pm.test(\"response must be valid and have a body\", function(){",
							"     pm.response.to.be.ok; ",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							"",
							"pm.test(\"Validate Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set('verificationCode', data.verificationCode);",
							"",
							"pm.test(\"Validate sourceId\", function(){",
							"    var expected = pm.environment.get('sourceId'); ",
							"    pm.expect(data.sourceId).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate memberType\", function(){",
							"    pm.expect(data.memberType).to.equal(\"Candidate\");",
							"});",
							"",
							"pm.test(\"Validate first name\", function(){",
							"      var expected = pm.environment.get('firstName'); ",
							"    pm.expect(data.firstName).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate last name\", function(){",
							"    var expected = pm.environment.get(\"lastName\");",
							"    pm.expect(data.lastName).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate email\", function(){",
							"    var expected =pm.environment.get(\"email\")",
							"    pm.expect(data.email).to.equal(expected);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/registration/getVerificationCode?email={{email}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"registration",
						"getVerificationCode"
					],
					"query": [
						{
							"key": "email",
							"value": "{{email}}"
						},
						{
							"key": "version",
							"value": "v{{version}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch_Registrant__c",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());\r",
							"const obj = JSON.parse(jsonData);\r",
							"\r",
							"//making sure we got 200 OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var registrant_id = obj.records[0].Id;\r",
							"pm.environment.set('registrantId', registrant_id);\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    //parse the response json and test three properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(obj.records[0].Country_Code__c).to.eql('CA');\r",
							"    pm.expect(obj.records[0].Over_18_Years_of_Age__c).to.be.true;\r",
							"    pm.expect(obj.records[0].Verified__c).to.be.false;\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_accessToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/services/data/v48.0/query/?q=Select+Authorized_to_Work_in_US__c,Contact__r.Name,Contact__r.Marketplace_Contact__c,Country_Code__c,CreatedById,CreatedDate,CurrencyIsoCode,Date_Sent__c,Date_Verified__c,Email_Sent__c,Email_verification_URL__c,Email__c,Expiration_Date__c,First_Name__c,Id,IsDeleted,Job_Order__c,Language_Locale__c,LastModifiedById,LastModifiedDate,LastReferencedDate,LastViewedDate,Last_Name__c,Line_of_Business__c,LinkedIn_Profile__c,Name,Over_18_Years_of_Age__c,OwnerId,Password__c,Phone_Number__c,Phone_Type__c,Photo__c,Postal_Code__c,Record_Type__c,Resume_File_Name__c,Source__c,SystemModstamp,TCAST_Access__c,Type__c,User__c,Verification_Code__c,Verification_Link_Source__c,Verified__c+FROM+Registrants__c+WHERE Email__c+=+'{{email}}'",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"services",
						"data",
						"v48.0",
						"query",
						""
					],
					"query": [
						{
							"key": "q",
							"value": "Select+Authorized_to_Work_in_US__c,Contact__r.Name,Contact__r.Marketplace_Contact__c,Country_Code__c,CreatedById,CreatedDate,CurrencyIsoCode,Date_Sent__c,Date_Verified__c,Email_Sent__c,Email_verification_URL__c,Email__c,Expiration_Date__c,First_Name__c,Id,IsDeleted,Job_Order__c,Language_Locale__c,LastModifiedById,LastModifiedDate,LastReferencedDate,LastViewedDate,Last_Name__c,Line_of_Business__c,LinkedIn_Profile__c,Name,Over_18_Years_of_Age__c,OwnerId,Password__c,Phone_Number__c,Phone_Type__c,Photo__c,Postal_Code__c,Record_Type__c,Resume_File_Name__c,Source__c,SystemModstamp,TCAST_Access__c,Type__c,User__c,Verification_Code__c,Verification_Link_Source__c,Verified__c+FROM+Registrants__c+WHERE Email__c+=+'{{email}}'",
							"description": "A SOQL query. Note that you will need to replace spaces with “+” characters in your query string to create a valid URI. An example query parameter string might look like: “SELECT+Name+FROM+MyObject”. If the SOQL query string is invalid, a MALFORMED_QUERY response is returned."
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate Email Links",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"pm.test(\"validation Status \", function(){\r",
							"    pm.expect(data.validationStatus).to.equal('pendingAccount');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"flowType\": \"verify\",\n    \"email\": \"{{email}}\",\n    \"verificationCode\": \"{{verificationCode}}\",\n    \"registrantId\": \"{{registrantId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/validateemaillinks/verify",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"validateemaillinks",
						"verify"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request Account 3.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"pm.test(\"creationStatus \", function(){\r",
							"    pm.expect(data.creationStatus).to.equal('Success');\r",
							"});\r",
							"\r",
							"pm.test(\"parentId\", function(){\r",
							"    pm.expect(data.parentId).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"partner Name\", function(){\r",
							"    pm.expect(data.partnerName).to.equal('RobertHalf');\r",
							"});\r",
							"\r",
							"pm.test(\"partner EventType \", function(){\r",
							"    pm.expect(data.partnerEventType).to.equal('ResumeUpload');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"flowType\": \"verify\",\n    \"candidateEmail\": \"{{email}}\",\n    \"verificationCode\": \"{{verificationCode}}\",\n    \"registrantId\": \"{{registrantId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/requestaccount?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"requestaccount"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());\r",
							"const obj = JSON.parse(jsonData);\r",
							"\r",
							"//making sure we got 200 OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var candidate_id = obj.records[0].Id;\r",
							"pm.environment.set('contactId', candidate_id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_accessToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/services/data/v48.0/query/?q=Select+id,lastname,firstname,email+FROM+contact+WHERE Email+=+'{{email}}'",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"services",
						"data",
						"v48.0",
						"query",
						""
					],
					"query": [
						{
							"key": "q",
							"value": "Select+id,lastname,firstname,email+FROM+contact+WHERE Email+=+'{{email}}'",
							"description": "A SOQL query. Note that you will need to replace spaces with “+” characters in your query string to create a valid URI. An example query parameter string might look like: “SELECT+Name+FROM+MyObject”. If the SOQL query string is invalid, a MALFORMED_QUERY response is returned."
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Candidate Login ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//get the response from the call made...\r",
							"var jsonResponse = JSON.parse(responseBody);\r",
							"console.log(jsonResponse.result);\r",
							"console.log(jsonResponse.returnCode);\r",
							"\r",
							"pm.test(\"Result\", function () {\r",
							"    pm.expect(jsonResponse.result).not.equal(\"null\");\r",
							"    console.log('error');\r",
							"});\r",
							"\r",
							"//call the second url\r",
							"const reqObject = {\r",
							"  url: jsonResponse.result,\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//build the authorize url\r",
							"const reqObject2 = {\r",
							"  url: pm.environment.get('_endpoint') + '/services/oauth2/authorize?client_id=' \r",
							"                 + pm.environment.get('client_id') + '&redirect_uri='+ pm.environment.get('callbackURI') +'&response_type=token',\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//nested sendRequest\r",
							"pm.sendRequest(reqObject, (err, res) => {\r",
							"    //call the authorize url\r",
							"    pm.sendRequest(reqObject2,(err, res) => {\r",
							"      var str = res.text();\r",
							"      var accessToken = decodeURI(str.substring(str.indexOf('access_token=')+13,\r",
							"                            str.indexOf('refresh_token')-1)); \r",
							"      // console.log(accessToken);\r",
							"      pm.globals.set('authToken',accessToken);\r",
							"    });\r",
							"});\r",
							"\r",
							"setTimeout(function(){}, ['20000']);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{_endpoint}}/servlet/servlet.loginwidgetcontroller?type=login&username={{email}}&password={{password}}&startURL=/services/oauth2/authorize?client_id={{client_id}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"servlet",
						"servlet.loginwidgetcontroller"
					],
					"query": [
						{
							"key": "type",
							"value": "login"
						},
						{
							"key": "username",
							"value": "{{email}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						},
						{
							"key": "startURL",
							"value": "/services/oauth2/authorize?client_id={{client_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "FetchNewCandidateProfile",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"    const fetchMyProfileSchema = {",
							"   \"profile\":{",
							"      \"personalData\":{",
							"         \"id\":\"string\",",
							"         \"firstName\":\"string\",",
							"         \"lastName\":\"string\",",
							"         \"address\":{",
							"            \"addressLine1\":\"string\",",
							"            \"addressLine2\":\"string\",",
							"            \"addressLine3\":\"string\",",
							"            \"city\":\"string\",",
							"            \"stateProvince\":\"string\",",
							"            \"county\":\"string\",",
							"            \"country\":\"string\",",
							"            \"postalCode\":\"string\"",
							"         },",
							"         \"contactInfo\":{",
							"            \"email\":\"string\",",
							"            \"phone\":\"string\"",
							"         },",
							"         \"mostRecentPosition\":\"string\",",
							"         \"pictureURL\":\"string\"",
							"      },",
							"      \"preferences\":{",
							"         \"desiredLocation\":\"string\",",
							"         \"desiredSalary\":\"number\",",
							"         \"distanceWillingToTravel\":\"number\",",
							"         \"willingToRelocate\":\"boolean\",",
							"         \"willingToWorkRemote\":\"boolean\"",
							"      },",
							"      \"summary\":\"string\",",
							"      \"skills\":[",
							"         \"string\"",
							"      ],",
							"      \"jobExperiences\":[",
							"         {",
							"            \"title\":\"string\",",
							"            \"company\":\"string\",",
							"            \"city\":\"string\",",
							"            \"state\":\"string\",",
							"            \"description\":\"string\",",
							"            \"fromDate\":\"string\",",
							"            \"toDate\":\"string\",",
							"            \"currentIndicator\":\"boolean\",",
							"            \"jobFunction\":\"string\"",
							"         }",
							"      ],",
							"      \"educationHistory\":[",
							"         {",
							"            \"degreeType\":\"string\",",
							"            \"fieldOfStudy\":\"string\",",
							"            \"schoolName\":\"string\",",
							"            \"dateAttended\":\"string\"",
							"         }",
							"      ]",
							"   }",
							"}",
							"",
							"pm.test('Schema Validation', function(){",
							"    var result = tv4.validateResult(JSON.parse(responseBody), fetchMyProfileSchema);",
							"    if(!result.valid){",
							"        console.log(result);",
							"    }",
							"})",
							"",
							"",
							"var data = JSON.parse(responseBody);",
							"console.log(data.profile.personalData.id);",
							"pm.test(\"response must be valid and have a body\", function(){",
							"     pm.response.to.be.ok; ",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.expect(data.returnCode).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validate Success message\", function () {",
							"   pm.expect(data.message).to.equal(\"Successful\");",
							"});",
							"",
							"pm.test(\"Validate firstname\", function(){",
							"     var expected = pm.environment.get(\"firstName\");",
							"    pm.expect(data.profile.personalData.firstName).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate contact id\", function(){",
							"     var expected = pm.environment.get(\"contactId\");",
							"    pm.expect(data.profile.personalData.id).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate People number\", function(){",
							"    pm.expect(data.profile.TCAST.peopleNumber).not.equal(null)",
							"});",
							"",
							"",
							"pm.test(\"Validate Suggested Skils\", function(){",
							"    pm.expect(data.profile.skills.suggestedSkills).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Current skills\", function(){",
							"    pm.expect(data.profile.skills.currentSkills).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate email\", function(){",
							"     var expected = pm.environment.get(\"email\").toLowerCase();",
							"    pm.expect(data.profile.personalData.contactInfo.email).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate Education History\", function(){",
							"    pm.expect(data.profile.educationHistory).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Job Experiences\", function(){",
							"    pm.expect(data.profile.jobExperiences).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Desired Location Zip\", function(){",
							"     var expected = pm.environment.get(\"CAPostalCode\");",
							"    pm.expect(data.profile.preferences.desiredLocationZip).to.equal(expected);",
							"});",
							"",
							"",
							"pm.test(\"validate RHD and Authorize flags\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(data.profile.settings.RHDStatus).to.eql(null);",
							"    pm.expect(data.profile.settings.RHDAccess).to.eql(null);",
							"    pm.expect(data.profile.preferences.authorizedToWorkCA).to.be.true;",
							"    pm.expect(data.profile.preferences.authorizedToWorkUS).to.be.false;",
							"",
							"});",
							"",
							"pm.test(\"Validate Onboarding stage2\", function(){",
							"    pm.expect(data.profile.onboarding.stage2).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Profile - Contact Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"personalData\": {\n        \"contactInfo\": {\n            \"phone\": \"(925) 666-4444\"\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Profile - Work Experience",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"jobExperiences\": [\n        {\n            \"toDate\": \"2019-05-31T00:00:00.000Z\",\n            \"title\": \"Systems Engineer Analyst\",\n            \"status\": \"Complete\",\n            \"state\": \"LA\",\n            \"jobFunction\": null,\n            \"fromDate\": \"2018-03-01T00:00:00.000Z\",\n            \"description\": \"Java and salsforce admin developer\",\n            \"currentIndicator\": false,\n            \"company\": \"Robert half INC, NY\",\n            \"city\": \"San Ramon\"\n        },\n        {\n            \"toDate\": null,\n            \"title\": \"Software QA Engineer\",\n            \"status\": \"Complete\",\n            \"state\": \"CA\",\n            \"jobFunction\": null,\n            \"fromDate\": \"2018-01-01T00:00:00.000Z\",\n            \"description\": \"Description: Worked closely with the project manager and the development team, created Test plans and Test cases for new features and making sure that the requirements are met before and after implementation of the features.\",\n            \"currentIndicator\": true,\n            \"company\": \"RagingWire Data Center\",\n            \"city\": \"Sacramento\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Profile - Education",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"educationHistory\": [\n        {\n            \"status\": \"Complete\",\n            \"schoolName\": \"MIT university\",\n            \"fieldOfStudy\": \"Computer Science\",\n            \"educationType\": \"Education\",\n            \"degreeType\": \"masters\",\n            \"dateAttended\": \"2018-01-01T00:00:00.000Z\"\n        },\n        {\n            \"status\": \"Complete\",\n            \"schoolName\": \"Cambridge university\",\n            \"fieldOfStudy\": \"Computer Science\",\n            \"educationType\": \"Education\",\n            \"degreeType\": \"Bachelors\",\n            \"dateAttended\": \"2014-01-01T00:00:00.000Z\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Profile - Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							"setTimeout(function(){}, ['5000']);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"skills\": {\n        \"suggestedSkills\": [\n            \"Ajax\",\n            \"Apache Struts\",\n            \"Automation\",\n            \"CSS\",\n            \"Defect Management\",\n            \"Deliverable\",\n            \"Eclipse\",\n            \"Framework\",\n            \"Hibernate ORM\",\n            \"HTML\",\n            \"Integration\",\n            \"JDBC\",\n            \"jQuery\",\n            \"JSP\",\n            \"Metric Reporting\",\n            \"Offshore\",\n            \"Oracle\",\n            \"Performance\",\n            \"Quality Center\",\n            \"Regression Analysis\",\n            \"Release Process\",\n            \"Servlets\",\n            \"Sprint Framework\",\n            \"SQL\",\n            \"Test Data\",\n            \"Test Execution\",\n            \"Test Scripts\",\n            \"Test Strategy\",\n            \"UAT\",\n            \"Web App\",\n            \"XML Technologies\"\n        ],\n        \"currentSkills\": [\n            \"Salesforce\",\n            \"Company\",\n            \"Computer Sciences\",\n            \"Database\",\n            \"Database Development\",\n            \"Development\",\n            \"GitHub\",\n            \"Implement Strategies\",\n            \"Implementation\",\n            \"J2EE\",\n            \"J2EE - Java 2 Enterprise Edition\",\n            \"Java Applet\",\n            \"Java Servlet\",\n            \"Java Swing\",\n            \"JavaBeans\",\n            \"JavaScript\",\n            \"Mobile Applications\",\n            \"MySQL\",\n            \"Planning Processes\",\n            \"Project Management\",\n            \"QA\",\n            \"QA - Quality Assurance\",\n            \"Research & Development\",\n            \"Selenium\",\n            \"Test Cases\",\n            \"Testing - IT\", \n            \"C++\"\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch CandidateProfile",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"    const fetchMyProfileSchema = {",
							"   \"profile\":{",
							"      \"personalData\":{",
							"         \"id\":\"string\",",
							"         \"firstName\":\"string\",",
							"         \"lastName\":\"string\",",
							"         \"address\":{",
							"            \"addressLine1\":\"string\",",
							"            \"addressLine2\":\"string\",",
							"            \"addressLine3\":\"string\",",
							"            \"city\":\"string\",",
							"            \"stateProvince\":\"string\",",
							"            \"county\":\"string\",",
							"            \"country\":\"string\",",
							"            \"postalCode\":\"string\"",
							"         },",
							"         \"contactInfo\":{",
							"            \"email\":\"string\",",
							"            \"phone\":\"string\"",
							"         },",
							"         \"mostRecentPosition\":\"string\",",
							"         \"pictureURL\":\"string\"",
							"      },",
							"      \"preferences\":{",
							"         \"desiredLocation\":\"string\",",
							"         \"desiredSalary\":\"number\",",
							"         \"distanceWillingToTravel\":\"number\",",
							"         \"willingToRelocate\":\"boolean\",",
							"         \"willingToWorkRemote\":\"boolean\"",
							"      },",
							"      \"summary\":\"string\",",
							"      \"skills\":[",
							"         \"string\"",
							"      ],",
							"      \"jobExperiences\":[",
							"         {",
							"            \"title\":\"string\",",
							"            \"company\":\"string\",",
							"            \"city\":\"string\",",
							"            \"state\":\"string\",",
							"            \"description\":\"string\",",
							"            \"fromDate\":\"string\",",
							"            \"toDate\":\"string\",",
							"            \"currentIndicator\":\"boolean\",",
							"            \"jobFunction\":\"string\"",
							"         }",
							"      ],",
							"      \"educationHistory\":[",
							"         {",
							"            \"degreeType\":\"string\",",
							"            \"fieldOfStudy\":\"string\",",
							"            \"schoolName\":\"string\",",
							"            \"dateAttended\":\"string\"",
							"         }",
							"      ]",
							"   }",
							"}",
							"",
							"pm.test('Schema Validation', function(){",
							"    var result = tv4.validateResult(JSON.parse(responseBody), fetchMyProfileSchema);",
							"    if(!result.valid){",
							"        console.log(result);",
							"    }",
							"})",
							"",
							"",
							"var data = JSON.parse(responseBody);",
							"console.log(data.profile.personalData.id);",
							"pm.test(\"response must be valid and have a body\", function(){",
							"     pm.response.to.be.ok; ",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.expect(data.returnCode).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validate Success message\", function () {",
							"   pm.expect(data.message).to.equal(\"Successful\");",
							"});",
							"",
							"pm.test(\"Validate firstname\", function(){",
							"     var expected = pm.environment.get(\"firstName\");",
							"    pm.expect(data.profile.personalData.firstName).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate contact id\", function(){",
							"     var expected = pm.environment.get(\"contactId\");",
							"    pm.expect(data.profile.personalData.id).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate People number\", function(){",
							"    pm.expect(data.profile.TCAST.peopleNumber).not.equal(null)",
							"});",
							"",
							"",
							"pm.test(\"Validate Suggested Skils\", function(){",
							"    pm.expect(data.profile.skills.suggestedSkills).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Current skills\", function(){",
							"    pm.expect(data.profile.skills.currentSkills).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate email\", function(){",
							"     var expected = pm.environment.get(\"email\").toLowerCase();",
							"    pm.expect(data.profile.personalData.contactInfo.email).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate Education History\", function(){",
							"    pm.expect(data.profile.educationHistory).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Job Experiences\", function(){",
							"     var expected = pm.environment.get(\"contactId\");",
							"    pm.expect(data.profile.jobExperiences).not.equal(null)",
							"});",
							"",
							"pm.test(\"Validate Desired Location Zip\", function(){",
							"     var expected = pm.environment.get(\"CAPostalCode\");",
							"    pm.expect(data.profile.preferences.desiredLocationZip).to.equal(expected);",
							"});",
							"",
							"pm.test(\"Validate Updated Contact Info\", function(){",
							"        pm.expect(data.profile.personalData.contactInfo.phone).to.equal(\"(925) 666-4444\");",
							"});",
							"",
							"pm.test(\"Validate Updated Job Info\", function(){",
							"        pm.expect(data.profile.jobExperiences[0].title).to.equal(\"Software QA Engineer\");",
							"});",
							"",
							"pm.test(\"Validate Updated Education Info\", function(){",
							"        pm.expect(data.profile.educationHistory[0].schoolName).to.equal(\"MIT university\");",
							"});",
							"",
							"pm.test(\"Validate Updated Skills\", function(){",
							"        pm.expect(data.profile.skills.currentSkills[0]).to.equal(\"C++\");",
							"});",
							"",
							"pm.test(\"Validate Onboarding stage2\", function(){",
							"        pm.expect(data.profile.onboarding.stage2).to.be.true;",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/profile",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Get Recommendations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.stringify(pm.response.json());\r",
							"const obj=JSON.parse(jsonData);\r",
							" \r",
							"console.log(obj.jobRecommendations[0].jobDetail.sf_jpsid);\r",
							" \r",
							"pm.environment.set('saveJobId', obj.jobRecommendations[0].jobDetail.sf_jpsid);\r",
							"pm.environment.set('saveJobPostingId', obj.jobRecommendations[0].jobDetail.sf_jo_number);\r",
							"pm.environment.set('saveJobTitle', obj.jobRecommendations[0].title);\r",
							"\r",
							"\r",
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Validate Job Recommendations\", function(){\r",
							"    pm.expect(data.jobRecommendations).not.equal(null)\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Job Number\", function(){\r",
							"    pm.expect(data.jobRecommendations[0].jobDetail.unique_job_number).not.equal(null)\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Job Id\", function(){\r",
							"    pm.expect(data.jobRecommendations[0].jobDetail.sf_jpsid).not.equal(null)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"locale\": \"{{locale_ca}}\",\n\t\"location\": \"{{CAPostalCode}}\"\n}"
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/jobs/recommendations/zengine?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"jobs",
						"recommendations",
						"zengine"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Save Job",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jobstatuses\": [\r\n        {\r\n            \"sf_jpsid\": \"{{saveJobId}}\",  \r\n            \"status\":\"save\" \r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/jobs/save?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"jobs",
						"save"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Saved Jobs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Saved Job ID\", function () {\r",
							"   var expected = pm.environment.get(\"saveJobId\");\r",
							"   pm.expect(data.savedJobslist[0].sf_jpsid).to.equal(expected);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/jobs/statuses?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"jobs",
						"statuses"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Job Apply",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"employmentType\": \"Temp\",\n    \"eventType\": \"Mobile\",\n    \"partnerCandidateId\": \"{{contactId}}\",\n    \"jp_sfid\": \"{{saveSimilarJobId}}\",\n    \"partnerName\": \"RobertHalfMobileApp\",\n    \"locale\": \"{{locale_ca}}\",\n    \"candidateCountryCode\": \"{{CACountryInitials}}\",\n    \"urlCountryCode\": \"{{CACountryInitials}}\",\n    \"caslOptIn\": \"N\",\n    \"partnerFlagNewCandidate\": \"Y\",\n    \"urlSfLobCode\": \"{{lobCode}}\",\n    \"partnerEventType\": \"JobApplyRH\",\n    \"jobPostingId\": \"{{saveJobPostingId}}\",\n    \"partnerMessageId\": \"RobertHalfMSGId\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/JobApply?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"JobApply"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Job Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Applied Job ID\", function () {\r",
							"   var expected = pm.environment.get(\"saveJobId\");\r",
							"   pm.expect(data.appliedJobslist[0].sf_jpsid).to.equal(expected);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/jobs/statuses?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"jobs",
						"statuses"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Similar Jobs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.stringify(pm.response.json());\r",
							"const obj=JSON.parse(jsonData);\r",
							" \r",
							"console.log(obj.jobs[0].sf_jo_number);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"pm.environment.set('saveJobPostingId', obj.jobs[0].sf_jo_number);\r",
							"pm.environment.set('saveSimilarJobId', obj.jobs[0].sf_jpsid);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{authToken}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"jobPostingId\": \"{{saveJobId}}\",\n    \"locationFilter\": {\n        \"locationstring\": \"{{CAPostalCode}}\"\n    },\n    \"locale\": \"{{locale_ca}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/jobs/similar?version=v{{appVersion}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"jobs",
						"similar"
					],
					"query": [
						{
							"key": "version",
							"value": "v{{appVersion}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Job Search - ITMCC",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							"\r",
							"// pm.test(\"Validate Jobs\", function(){\r",
							"//     console.log(data.jobs)\r",
							"//     pm.expect(data.jobs).not.equal(null)\r",
							"// });\r",
							"\r",
							"// pm.test(\"Validate Job Number\", function(){\r",
							"//     pm.expect(data.jobs[0].unique_job_number).not.equal(null)\r",
							"// });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{mobile_search_api_key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"type": "text",
						"value": "B0q5TnBcCx2WPggqh5oQf8odinnFx2bq9qTCRTzp"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sortby\": \"RELEVANCE_DESC\",\n    \"location\": \"{{CAPostalCode}}\",\n    \"country\": \"{{CACountryInitials}}\",\n    \"distance\": 50,\n    \"source\": [\n        \"Salesforce\"\n    ],\n    \"pagesize\": \"35\",\n    \"pagenumber\": \"1\",\n    \"languagecodes\": [\n        \"{{locale_ca}}\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{mobile_search_url}}/mobile-search/jobs",
					"host": [
						"{{mobile_search_url}}"
					],
					"path": [
						"mobile-search",
						"jobs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Job Alerts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.environment.set('subscriptionId', data.subscriptionId);\r",
							"\r",
							"pm.test(\"Validate Subscription Id\", function () {\r",
							"   pm.expect(data.subscriptionId).not.equal(null);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"subscriptionSource\": \"Mobile\",\n    \"email\": \"{{email}}\",\n    \"keywords\": \"{{saveJobTitle}}\",\n    \"location\": \"{{CAPostalCode}}\",\n    \"countryCode\": \"{{CACountryInitials}}\",\n    \"emailFrequency\": \"W\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/job/alerts/{{CAPostalCode}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"job",
						"alerts",
						"{{CAPostalCode}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Job Alerts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Job Alert\", function(){\r",
							"    var expected = pm.environment.get('subscriptionId');\r",
							"    pm.expect(data.items[0].subscriptionId).to.equal(expected);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/job/alerts?candidateEmail={{email}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"job",
						"alerts"
					],
					"query": [
						{
							"key": "candidateEmail",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Put Job Alerts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Job Alert\", function(){\r",
							"    var expected = pm.environment.get('subscriptionId');\r",
							"    pm.expect(data.subscriptionId).to.equal(expected);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"subscriptionId\": \"{{subscriptionId}}\",\n   \"emailFrequency\": \"W\",\n   \"status\": \"I\"\n}"
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/job/alerts?candidateEmail={{email}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"job",
						"alerts"
					],
					"query": [
						{
							"key": "candidateEmail",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Job Alerts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Message\", function(){\r",
							"    pm.expect(data.message).to.equal('No job alerts found for this email address.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/job/alerts?candidateEmail={{email}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"job",
						"alerts"
					],
					"query": [
						{
							"key": "candidateEmail",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"newPassword\": \"{{newPassword}}\",\r\n    \"verifyPassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/password/change",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"password",
						"change"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with changed password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//get the response from the call made...\r",
							"var jsonResponse = JSON.parse(responseBody);\r",
							"console.log(jsonResponse.result);\r",
							"console.log(jsonResponse.returnCode);\r",
							"\r",
							"pm.test(\"Result\", function () {\r",
							"    pm.expect(jsonResponse.result).not.equal(\"null\");\r",
							"    console.log('error');\r",
							"});\r",
							"\r",
							"//call the second url\r",
							"const reqObject = {\r",
							"  url: jsonResponse.result,\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//build the authorize url\r",
							"const reqObject2 = {\r",
							"  url: pm.environment.get('_endpoint') + '/services/oauth2/authorize?client_id=' \r",
							"                 + pm.environment.get('client_id') + '&redirect_uri='+ pm.environment.get('callbackURI') +'&response_type=token',\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//nested sendRequest\r",
							"pm.sendRequest(reqObject, (err, res) => {\r",
							"    //call the authorize url\r",
							"    pm.sendRequest(reqObject2,(err, res) => {\r",
							"      var str = res.text();\r",
							"      var accessToken = decodeURI(str.substring(str.indexOf('access_token=')+13,\r",
							"                            str.indexOf('refresh_token')-1)); \r",
							"      // console.log(accessToken);\r",
							"      pm.globals.set('authToken',accessToken);\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{_endpoint}}/servlet/servlet.loginwidgetcontroller?type=login&username={{email}}&password={{newPassword}}&startURL=/services/oauth2/authorize?client_id={{client_id}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"servlet",
						"servlet.loginwidgetcontroller"
					],
					"query": [
						{
							"key": "type",
							"value": "login"
						},
						{
							"key": "username",
							"value": "{{email}}"
						},
						{
							"key": "password",
							"value": "{{newPassword}}"
						},
						{
							"key": "startURL",
							"value": "/services/oauth2/authorize?client_id={{client_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Revert Change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.expect(data.returnCode).to.equal(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"newPassword\": \"{{password}}\",\r\n    \"verifyPassword\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/password/change",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"password",
						"change"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//get the response from the call made...\r",
							"var jsonResponse = JSON.parse(responseBody);\r",
							"console.log(jsonResponse.result);\r",
							"console.log(jsonResponse.returnCode);\r",
							"\r",
							"pm.test(\"Result\", function () {\r",
							"    pm.expect(jsonResponse.result).not.equal(\"null\");\r",
							"    console.log('error');\r",
							"});\r",
							"\r",
							"//call the second url\r",
							"const reqObject = {\r",
							"  url: jsonResponse.result,\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//build the authorize url\r",
							"const reqObject2 = {\r",
							"  url: pm.environment.get('_endpoint') + '/services/oauth2/authorize?client_id=' \r",
							"                 + pm.environment.get('client_id') + '&redirect_uri='+ pm.environment.get('callbackURI') +'&response_type=token',\r",
							"  method: 'GET',\r",
							"  header: 'Content-Type:application/x-www-form-urlencoded'\r",
							"};\r",
							"\r",
							"//nested sendRequest\r",
							"pm.sendRequest(reqObject, (err, res) => {\r",
							"    //call the authorize url\r",
							"    pm.sendRequest(reqObject2,(err, res) => {\r",
							"      var str = res.text();\r",
							"      var accessToken = decodeURI(str.substring(str.indexOf('access_token=')+13,\r",
							"                            str.indexOf('refresh_token')-1)); \r",
							"      // console.log(accessToken);\r",
							"      pm.globals.set('authToken',accessToken);\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{_endpoint}}/servlet/servlet.loginwidgetcontroller?type=login&username={{email}}&password={{password}}&startURL=/services/oauth2/authorize?client_id={{client_id}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"servlet",
						"servlet.loginwidgetcontroller"
					],
					"query": [
						{
							"key": "type",
							"value": "login"
						},
						{
							"key": "username",
							"value": "{{email}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						},
						{
							"key": "startURL",
							"value": "/services/oauth2/authorize?client_id={{client_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Email Preferences",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());",
							"const obj = JSON.parse(jsonData);",
							"",
							"pm.test(\"response must be valid and have a body\", function(){",
							"     pm.response.to.be.ok; ",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; ",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Successful response \", () => {",
							"    pm.expect(obj.message).to.eql('Successful');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/preferencecenter",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"preferencecenter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Forgot Username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());\r",
							"const obj = JSON.parse(jsonData);\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function(){\r",
							"     pm.response.to.be.ok; \r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Successful response \", () => {\r",
							"    pm.expect(obj.message).to.eql('SUCCESS');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/password/forgot?email={{email}}&country={{CACountryInitials}}&locale={{locale_ca}}&language={{locale_ca}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"password",
						"forgot"
					],
					"query": [
						{
							"key": "email",
							"value": "{{email}}"
						},
						{
							"key": "country",
							"value": "{{CACountryInitials}}"
						},
						{
							"key": "locale",
							"value": "{{locale_ca}}"
						},
						{
							"key": "language",
							"value": "{{locale_ca}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Forgot Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.stringify(pm.response.json());\r",
							"const obj = JSON.parse(jsonData);\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function(){\r",
							"     pm.response.to.be.ok; \r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Successful response \", () => {\r",
							"    pm.expect(obj.message).to.eql('SUCCESS');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{_endpoint}}/mobileapi/services/apexrest/me/password/forgot?email={{email}}&country={{CACountryInitials}}&locale={{locale_ca}}&language={{locale_ca}}",
					"host": [
						"{{_endpoint}}"
					],
					"path": [
						"mobileapi",
						"services",
						"apexrest",
						"me",
						"password",
						"forgot"
					],
					"query": [
						{
							"key": "email",
							"value": "{{email}}"
						},
						{
							"key": "country",
							"value": "{{CACountryInitials}}"
						},
						{
							"key": "locale",
							"value": "{{locale_ca}}"
						},
						{
							"key": "language",
							"value": "{{locale_ca}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}